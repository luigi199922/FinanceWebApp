{"version":3,"sources":["components/SecurityChartForm/Ticker/Ticker.js","components/SecurityInfo/SecurityInfo.js","components/SecurityInfo/SecurityInfo.module.css","components/SecurityChartForm/SecurityChartForm.js","components/SecurityGrapher/SecurityGrapher.js","containers/InstrumentChart/InstrumentChart.js","shared/functions.js"],"names":["withRouter","ticker","elementType","valid","validation","value","touched","label","path","match","inputChangedHandler","useState","instrumentArray","setInstrumentArray","useEffect","console","log","getTickerSymbols","slice","then","elementConfig","options","input","length","key","invalid","shouldValidate","changed","event","Fragment","connect","state","isAuth","undefined","auth","token","history","quoteData","setQuoteData","getQuoteData","data","addToWatchList","a","redirectLogin","axios","patch","symbol","createHTTPHeaders","res","push","className","classes","Container","Price","priceClose","Date","date","btnType","backgroundColor","clicked","module","exports","SecurityChartForm","inputForm","startDate","type","placeholder","required","minLength","endDate","timeFrame","displayValue","onSubmitHandler","preventDefault","formValues","formElementIdentifier","convertFromDateToUNIXTimeStamp","props","formSubmit","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","formIsValid","setState","inputTickerChangedHandler","formElementsArray","this","id","config","form","onSubmit","map","formElement","disabled","Component","SecurityGrapher","loading","error","initialGraph","onSubmitFormHandler","bind","formatAPIRequest","catch","chart","height","title","text","align","xaxis","yaxis","tooltip","enabled","customChart","final","series","securityGrapher","SecurityInfo","instrument","React","InstrumentChart","base","timeframe","Promise","resolve","reject","url","API_KEY","result","get","o","h","l","c","t","i","x","y","exchange","tickers","description","getTime","toString","getTickerExpectedReturns","sum","divisor","returnsArray","average","stDev","standardDeviation","arr","usePopulation","mean","reduce","acc","val","Math","sqrt","concat","formatAPIRequestOptions","responseArray","expirationDate","getOptionData","optionType","optionListView","localeCompare","CALL","err","pc","toDateString"],"mappings":"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","file":"static/js/12.c5ed9390.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { getTickerSymbols } from \"../../../shared/functions\";\nimport Input from '../../UI/Input/Input'\n\nconst TickerOptions = ({\n  ticker: {\n    elementType,\n    valid,\n    validation,\n    value,\n    touched,\n    label,\n  },\n  match : {\n    path,\n  },\n  inputChangedHandler\n}) => {\n\n  const [instrumentArray, setInstrumentArray] = useState([]);\n\n  useEffect((instrumentArray) => {\n    console.log(\"Use Effect Called\")\n    const tickersArray = getTickerSymbols(path.slice(1));\n    tickersArray.then((ticker) => setInstrumentArray(ticker));\n    console.log(path)\n  }, [path]);\n\n\n  const elementConfig = {\n    options: instrumentArray\n  }\n  \n  let input = null\n  if(instrumentArray.length > 0){\n   input =  <Input\n    key=\"ticker\"\n    elementType={elementType}\n    elementConfig={elementConfig}\n    invalid={valid}\n    shouldValidate={validation}\n    value={value}\n    touched={touched}\n    label={label}\n    changed={(event) => inputChangedHandler(event, \"ticker\")}\n  />\n  }\n  return (\n    <React.Fragment>\n      {input}\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TickerOptions);\n","import React, {useState, useEffect} from 'react'\nimport {getQuoteData} from '../../shared/functions'\nimport classes from \"./SecurityInfo.module.css\"\nimport Button from \"../UI/Button/Button\"\nimport {withRouter} from \"react-router\"\nimport axios from \"../../axios/auth\"\nimport {connect} from \"react-redux\"\nimport {createHTTPHeaders} from \"../../shared/utility\"\nconst SecurityInfo = ({ticker, history, isAuth,token}) => {\n    const [quoteData, setQuoteData] = useState({})\n    useEffect(()=> {\n        const data = getQuoteData(ticker)\n        data.then((data) => setQuoteData(data))\n    }, [ticker])\n\n    const addToWatchList = async() => {\n        if(!isAuth) return redirectLogin()\n       const res =  await axios.patch(\"watchlist\", {symbol: ticker}, createHTTPHeaders(token))\n        console.log(res)\n    }\n\n    const redirectLogin = () => {\n        history.push(\"/login\")\n    }\n   console.log(isAuth)\n    return(\n        <div className={classes.Container}>\n            <p>{ticker}</p>\n            <p className={classes.Price}>{quoteData.priceClose}</p>\n            <p className={classes.Date}>{quoteData.date}</p>\n            <Button btnType=\"Info\" className={{backgroundColor: \"none\"}}>Buy</Button> \n            <Button btnType=\"Info\" >Sell</Button>\n            <Button btnType=\"Info\" clicked={addToWatchList}>Add to Favorites</Button>        \n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.token !== undefined,\n        token: state.auth.token\n    }\n}\nexport default connect(mapStateToProps)(withRouter(SecurityInfo))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SecurityInfo_Container__1VStK\",\"Price\":\"SecurityInfo_Price__3t1fR\",\"Date\":\"SecurityInfo_Date__Oiu0K\"};","import React, { Component } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport { updateObject, checkValidity } from \"../../shared/utility\";\nimport { convertFromDateToUNIXTimeStamp } from \"../../shared/functions\";\nimport TickerOptions from \"./Ticker/Ticker\";\nimport Paper from \"@material-ui/core/Paper\";\n\nclass SecurityChartForm extends Component {\n  state = {\n    inputForm: {\n      startDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"Start Date\",\n        },\n        value: \"\",\n        label: \"Start Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      endDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"End Date\",\n        },\n        value: \"\",\n        label: \"End Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      timeFrame: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"1\", displayValue: \"1\" },\n            { value: \"5\", displayValue: \"5\" },\n            { value: \"15\", displayValue: \"15\" },\n            { value: \"30\", displayValue: \"30\" },\n            { value: \"60\", displayValue: \"60\" },\n            { value: \"D\", displayValue: \"D\" },\n            { value: \"W\", displayValue: \"W\" },\n            { value: \"M\", displayValue: \"M\" },\n          ],\n        },\n        value: \"30\",\n        validation: {\n          required: true,\n        },\n        label: \"Time Frame\",\n      },\n    },\n    ticker: {\n      elementType: \"select\",\n      elementConfig: {\n        options: [],\n      },\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      label: \"Ticker Symbol\",\n    },\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const formValues = {};\n    for (let formElementIdentifier in this.state.inputForm) {\n      formValues[formElementIdentifier] = this.state.inputForm[\n        formElementIdentifier\n      ].value;\n    }\n    formValues.ticker = this.state.ticker.value;\n    formValues.startDate = convertFromDateToUNIXTimeStamp(formValues.startDate);\n    formValues.endDate = convertFromDateToUNIXTimeStamp(formValues.endDate);\n    this.props.formSubmit(formValues);\n  };\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(\n      this.state.inputForm[inputIdentifier],\n      {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.inputForm[inputIdentifier].validation\n        ),\n        touched: true,\n      }\n    );\n    const updatedOrderForm = updateObject(this.state.inputForm, {\n      [inputIdentifier]: updatedFormElement,\n    });\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      if (updatedOrderForm[inputIdentifier].valid === false) {\n        formIsValid = false;\n      }\n    }\n\n    this.setState({ inputForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  inputTickerChangedHandler = (event) => {\n    const updatedFormElement = updateObject(this.state.ticker, {\n      ...this.state.ticker,\n      value: event.target.value,\n    });\n    this.setState({ ticker: updatedFormElement });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.inputForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.inputForm[key],\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.onSubmitHandler}>\n        <TickerOptions\n          ticker={this.state.ticker}\n          inputChangedHandler={this.inputTickerChangedHandler}\n        />\n\n        {formElementsArray.map((formElement, key) => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              invalid={!formElement.config.valid}\n              shouldValidate={formElement.config.validation}\n              value={formElement.config.value}\n              touched={formElement.config.touched}\n              label={formElement.config.label}\n              changed={(event) =>\n                this.inputChangedHandler(event, formElement.id)\n              }\n            />\n          );\n        })}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          SUBMIT\n        </Button>\n      </form>\n    );\n\n    return <Paper>{form}</Paper>;\n  }\n}\n\nexport default SecurityChartForm;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { formatAPIRequest } from \"../../shared/functions\";\nimport SecurityChartForm from \"../SecurityChartForm/SecurityChartForm\";\nimport SecurityInfo from \"../SecurityInfo/SecurityInfo\"\n\nexport default class SecurityGrapher extends React.Component {\n\n  componentDidMount() {\n    this.onSubmitFormHandler = this.onSubmitFormHandler.bind(this);\n    this.onSubmitFormHandler();\n  }\n\n  state = {\n    ticker: \"\",\n    loading: true,\n    error: null,\n    data: [],\n    initialGraph: {\n      ticker: \"\",\n      timeFrame: \"\",\n      startDate: \"\",\n      endDate: \"\",\n    },\n  };\n\n  onSubmitFormHandler(formValues = this.state.initialGraph) {\n    const data = formatAPIRequest(\n      formValues.ticker,\n      formValues.timeFrame,\n      formValues.startDate,\n      formValues.endDate\n    );\n    data\n      .then((data) =>\n        this.setState({ loading: false, data: data, ticker: formValues.ticker })\n      )\n      .catch((error) => this.setState({ error: error }));\n  }\n\n  render() {\n    const options = {\n      chart: {\n        type: \"candlestick\",\n        height: 350,\n      },\n      title: {\n        text: this.state.ticker,\n        align: \"left\",\n      },\n      xaxis: {\n        type: \"datetime\",\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true,\n        },\n      },\n    };\n\n    let customChart = null;\n    if (!this.state.loading) {\n      const final = [\n        {\n          data: this.state.data,\n        },\n      ];\n      customChart = (\n        <Chart\n          options={options}\n          series={final}\n          type=\"candlestick\"\n          height={350}\n        />\n      );\n    }\n    let securityGrapher = null\n    if(this.state.ticker !==\"\"){\n      securityGrapher = <SecurityInfo ticker={this.state.ticker} />\n    }\n    return (\n      <div>\n        {securityGrapher}\n        {customChart}\n        <SecurityChartForm\n          instrument={this.props.instrument}\n          formSubmit={this.onSubmitFormHandler}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport SecurityGrapher from \"../../components/SecurityGrapher/SecurityGrapher\"\n\nconst InstrumentChart = props => {\n\n    return(\n        <SecurityGrapher instrument={props.match.path.slice(1)}/>\n    )\n        \n        \n    \n}\nexport default InstrumentChart","import axios from \"axios\";\nimport { API_KEY } from \"./key\";\nconst base = \"https://finnhub.io/api/v1/stock/candle?symbol=\";\n\nexport const formatAPIRequest = (symbol, timeframe, startDate, endDate) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    const result = [];\n    axios\n      .get(url)\n      .then((res) => {\n        const o = res.data.o;\n        const h = res.data.h;\n        const l = res.data.l;\n        const c = res.data.c;\n        const t = res.data.t;\n\n        for (let i = 0; i < o.length; i++) {\n          result.push({\n            x: new Date(t[i]) * 1000,\n            y: [o[i], h[i], l[i], c[i]],\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getTickerSymbols = (instrument) => {\n  let type = instrument;\n  let exchange = \"\";\n  switch (type) {\n    case \"stock\":\n      exchange = \"US\";\n      break;\n    case \"forex\":\n      exchange = \"oanda\";\n      break;\n    case \"crypto\":\n      exchange = \"binance\";\n      break;\n    default:\n      type = \"stock\";\n      exchange = \"US\";\n  }\n  return new Promise((resolve, reject) => {\n    const url =\n      \"https://finnhub.io/api/v1/\" +\n      type +\n      \"/symbol?exchange=\" +\n      exchange +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const convertFromDateToUNIXTimeStamp = (date) => {\n  const result = new Date(date).getTime() / 1000;\n  return result.toString();\n};\n\nexport const getTickerExpectedReturns = (\n  symbol,\n  timeframe,\n  startDate,\n  endDate\n) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        let sum = 0;\n        var divisor = 0;\n        const c = res.data.c;\n        console.log(c);\n        const returnsArray = [];\n        for (let i = 0; i < c.length; i++) {\n          if (i !== c.length - 1) {\n            sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n            returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n            divisor += 1;\n          }\n        }\n        const average = sum / divisor;\n        const stDev = standardDeviation(returnsArray);\n        console.log(returnsArray);\n        console.log(\"stDev\" + stDev);\n        console.log(\"ER\" + average);\n        resolve([average, stDev]);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getStockCorrelation = async (\n  ticker1,\n  ticker2,\n  startDate,\n  endDate,\n  timeframe\n) => {\n  const url =\n    base +\n    ticker1 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n\n  const url2 =\n    base +\n    ticker2 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n  let sum = 0;\n  await axios.get(url).then((res) => {   \n    const c = res.data.c;\n    const returnsArray = [];\n    \n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum = sum + ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n  sum = 0\n  await axios.get(url2).then((res) => {\n    const c = res.data.c;\n    const returnsArray = [];\n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n};\n\nconst standardDeviation = (arr, usePopulation = false) => {\n  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n  return Math.sqrt(\n    arr\n      .reduce((acc, val) => acc.concat((val - mean) ** 2), [])\n      .reduce((acc, val) => acc + val, 0) /\n      (arr.length - (usePopulation ? 0 : 1))\n  );\n};\n\nexport const formatAPIRequestOptions = (ticker) => {\n  const url =\n    \" https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n  console.log(url);\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const result = [];\n        const responseArray = res.data.data;\n        for (let i = 0; i < responseArray.length; i++) {\n          result.push({\n            key: i,\n            value: responseArray[i].expirationDate,\n            displayValue: responseArray[i].expirationDate,\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getOptionData = (\n  ticker,\n  expirationDate,\n  optionType,\n  optionListView\n) => {\n  const url =\n    \"https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = res.data.data;\n        let result = [];\n        for (let i = 0; i < data.length; i++) {\n          if (expirationDate.localeCompare(data[i].expirationDate) === 0) {\n            if (optionListView) {\n              result = data[i].options[optionType];\n            } else {\n              result = data[i].options.CALL;\n            }\n\n            break;\n          }\n        }\n        resolve(result);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getQuoteData = (symbol) => {\n  const url = \"https://finnhub.io/api/v1/quote?symbol=\" + symbol + API_KEY;\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = {\n          priceClose: res.data.pc,\n          date: new Date(res.data.t).toDateString(),\n        };\n        resolve(data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n"],"sourceRoot":""}