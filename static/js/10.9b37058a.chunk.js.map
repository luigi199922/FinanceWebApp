{"version":3,"sources":["hooks-store/store.js","components/SecurityChartForm/Ticker/Ticker.js","components/SecurityInfo/SecurityInfo.js","components/SecurityInfo/SecurityInfo.module.css","containers/Options/Options.module.css","components/Option/Row/Row.module.css","components/Option/Portfolio/Delete.svg","components/Option/Row/TableData/TableData.js","components/Option/Row/Row.js","components/Option/Option.js","components/Option/Charts/Payoff/Payoff.js","components/Option/Portfolio/utility.js","components/Option/Portfolio/OptionControls.js","components/Option/Portfolio/Portfolio.js","hooks-store/optionPortfolio.js","containers/Options/Options.js","shared/functions.js"],"names":["globalState","listeners","actions","useStore","shouldListen","setState","useState","dispatch","actionId","payload","newPortfolio","listener","useEffect","push","filter","li","initStore","userActions","initialState","withRouter","ticker","elementType","valid","validation","value","touched","label","path","match","inputChangedHandler","instrumentArray","setInstrumentArray","getTickerSymbols","slice","then","elementConfig","options","input","length","key","invalid","shouldValidate","changed","event","Fragment","connect","state","isAuth","undefined","auth","token","history","quoteData","setQuoteData","a","getQuoteData","data","func","addToWatchList","redirectLogin","axios","patch","symbol","createHTTPHeaders","className","classes","Container","Price","priceClose","Date","date","btnType","backgroundColor","clicked","module","exports","TD","props","children","Row","TableData","option","optionDisplay","inTheMoney","properties","Object","keys","map","val","lastTradeDateTime","split","toDateString","toFixed","color","onClick","direction","Option","expirationDate","optionType","optionData","setOptionData","getOptionData","catch","err","console","log","rows","contract","contractName","headitems","optionValues","Payoff","title","labels","ctx","document","getElementById","getContext","Chart","type","datasets","lineTension","fill","borderColor","borderWidth","display","text","scales","style","margin","width","id","height","getMaxStrike","max","forEach","strike","fillPayoffArray","matrix","index","cost","i","price","includes","Math","parseInt","amount","min","getTotalCost","bid","ask","useStyles","makeStyles","theme","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","OptionControls","removeOption","ExpansionPanel","elevation","ExpansionPanelSummary","Typography","ExpansionPanelDetails","TextField","defaultValue","onChange","e","target","InputLabelProps","shrink","InputProps","readOnly","variant","src","Delete","alt","container","padding","Data","setData","Labels","setLabels","view","setView","portfolio","maxStrike","floor","Array","getPayoffData","list","o","Paper","stock","ADD_OPTION","action","replace","REMOVE_OPTION","CLEAR_PORTFOLIO","SET_AMOUNT","ADD_STOCK","configurePortfolioStore","Options","required","setTicker","dates","setDates","formIsValid","setFormIsValid","viewOptionChain","setViewOptionChain","setOptionType","displayList","setDisplayList","inputTickerChangedHandler","updatedFormElement","updateObject","formatAPIRequestOptions","expDates","toggleOptionTypeHandler","expirationDates","Input","inputIdentifier","SecurityInfo","onSubmit","preventDefault","Ticker","Button","disabled","optionListView","base","formatAPIRequest","timeframe","startDate","endDate","Promise","resolve","reject","url","API_KEY","result","get","res","h","l","c","t","x","y","error","instrument","exchange","tickers","displayValue","description","convertFromDateToUNIXTimeStamp","getTime","toString","getTickerExpectedReturns","sum","divisor","returnsArray","average","stDev","standardDeviation","arr","usePopulation","mean","reduce","acc","sqrt","concat","responseArray","localeCompare","CALL","pc"],"mappings":"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","file":"static/js/10.9b37058a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nlet globalState = {};\nlet listeners = [];\nlet actions = {};\n\nexport const useStore = (shouldListen = true) => {\n  const setState = useState(globalState)[1];\n\n  const dispatch = (actionId, payload) => {\n    const newPortfolio = actions[actionId](globalState, payload);\n    globalState = { ...globalState, ...newPortfolio };\n\n    for (const listener of listeners) {\n      listener(globalState);\n    }\n  };\n\n  useEffect(() => {\n    if (shouldListen) {\n      listeners.push(setState);\n    }\n\n    return () => {\n      if (shouldListen) {\n        listeners = listeners.filter((li) => li !== setState);\n      }\n    };\n  }, [setState, shouldListen]);\n\n  return [globalState, dispatch];\n};\n\nexport const initStore = (userActions, initialState) => {\n  if (initialState) {\n    globalState = { ...globalState, ...initialState };\n  }\n\n  actions = { ...actions, ...userActions };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { getTickerSymbols } from \"../../../shared/functions\";\nimport Input from '../../UI/Input/Input'\n\nconst TickerOptions = ({\n  ticker: {\n    elementType,\n    valid,\n    validation,\n    value,\n    touched,\n    label,\n  },\n  match : {\n    path,\n  },\n  inputChangedHandler\n}) => {\n\n  const [instrumentArray, setInstrumentArray] = useState([]);\n\n  useEffect((instrumentArray) => {\n    const tickersArray = getTickerSymbols(path.slice(1));\n    tickersArray.then((ticker) => setInstrumentArray(ticker));\n  }, [path]);\n\n\n  const elementConfig = {\n    options: instrumentArray\n  }\n  \n  let input = null\n  if(instrumentArray.length > 0){\n   input =  <Input\n    key=\"ticker\"\n    elementType={elementType}\n    elementConfig={elementConfig}\n    invalid={valid}\n    shouldValidate={validation}\n    value={value}\n    touched={touched}\n    label={label}\n    changed={(event) => inputChangedHandler(event, \"ticker\")}\n  />\n  }\n  return (\n    <React.Fragment>\n      {input}\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TickerOptions);\n","import React, { useState, useEffect } from \"react\";\nimport { getQuoteData } from \"../../shared/functions\";\nimport classes from \"./SecurityInfo.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { withRouter } from \"react-router\";\nimport axios from \"../../axios/auth\";\nimport { connect } from \"react-redux\";\nimport { createHTTPHeaders } from \"../../shared/utility\";\nimport { useStore } from \"../../hooks-store/store\";\n\nconst SecurityInfo = ({ ticker, history, isAuth, token }) => {\n  const [quoteData, setQuoteData] = useState({});\n  const dispatch = useStore(false)[1];\n  useEffect(() => {\n    const func = async () => {\n      const data = await getQuoteData(ticker);\n      setQuoteData(data);\n      dispatch(\"ADD_STOCK\", {\n        ticker,\n        data\n      });\n    };\n    func();\n  }, [ticker]);\n\n  const addToWatchList = async () => {\n    if (!isAuth) return redirectLogin();\n    await axios.patch(\n      \"watchlist\",\n      { symbol: ticker },\n      createHTTPHeaders(token)\n    );\n  };\n\n  const redirectLogin = () => {\n    history.push(\"/login\");\n  };\n  return (\n    <div className={classes.Container}>\n      <p>{ticker}</p>\n      <p className={classes.Price}>{quoteData.priceClose}</p>\n      <p className={classes.Date}>{quoteData.date}</p>\n      <Button btnType=\"Info\" className={{ backgroundColor: \"none\" }}>\n        Buy\n      </Button>\n      <Button btnType=\"Info\">Sell</Button>\n      <Button btnType=\"Info\" clicked={addToWatchList}>\n        Add to Favorites\n      </Button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.token !== undefined,\n    token: state.auth.token,\n  };\n};\nexport default connect(mapStateToProps)(withRouter(SecurityInfo));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SecurityInfo_Container__1VStK\",\"Price\":\"SecurityInfo_Price__3t1fR\",\"Date\":\"SecurityInfo_Date__Oiu0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Options_Container__10n85\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Row_Row__1ysdh\"};","module.exports = __webpack_public_path__ + \"static/media/Delete.6531b738.svg\";","import React from 'react'\n\nconst TD = (props) => {\n    return (\n        <td>{props.children}</td>\n    )\n}\nexport default TD","import React from \"react\";\nimport TD from \"./TableData/TableData\";\nimport classes from \"./Row.module.css\";\nimport { Button } from \"@material-ui/core\";\nimport { useStore } from \"../../../hooks-store/store\";\n\nconst Row = ({ option, optionDisplay }) => {\n  const { inTheMoney } = option;\n  const properties = Object.keys(optionDisplay);\n  const dispatch = useStore(false)[1];\n  let TableData = null;\n  TableData = properties.map((val, key) => {\n    if (val === \"lastTradeDateTime\") {\n      return (\n        <TD key={key}>\n          {new Date(option.lastTradeDateTime.split(\" \")).toDateString()}\n        </TD>\n      );\n    } else if (typeof option[val] === \"number\") {\n      return <TD key={key}>{option[val].toFixed(2)}</TD>;\n    }\n    return <TD key={key}>{option[val]}</TD>;\n  });\n\n  return (\n    <tr className={inTheMoney === \"TRUE\" ? classes.Row : null}>\n      {TableData}\n      <TD>\n        <Button\n          color=\"primary\"\n          onClick={() => dispatch(\"ADD_OPTION\", { option, direction: \"LONG\" })}\n        >\n          Long\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={() => dispatch(\"ADD_OPTION\", { option, direction: \"SHORT\" })}\n        >\n          Short\n        </Button>\n      </TD>\n    </tr>\n  );\n};\nexport default Row;\n","import React, { useState, useEffect } from \"react\";\nimport { getOptionData } from \"../../shared/functions\";\nimport Row from \"./Row/Row\";\nimport { optionValues } from \"../../shared/utility\";\n\nconst Option = ({\n  ticker,\n  expirationDate,\n  optionDisplay,\n  optionType,\n}) => {\n  const [optionData, setOptionData] = useState([]);\n\n  useEffect(() => {\n    const data = getOptionData(ticker, expirationDate, optionType, true);\n    data.then((data) => setOptionData(data)).catch((err) => console.log(err)); // Handle it and Render User Feed back in a modal\n  }, [ticker, optionType, expirationDate]);\n\n  let rows = null;\n  if (optionData.length > 0) {\n    rows = optionData.map((contract) => {\n      return (\n        <Row\n          key={contract.contractName}\n          optionDisplay={optionDisplay}\n          option={contract}\n        ></Row>\n      );\n    });\n  }\n\n  const keysToDisplay = Object.keys(optionDisplay);\n\n  let headitems = keysToDisplay.map((val, key) => {\n    return <th key={key}>{optionValues[val]}</th>;\n  });\n\n  return (\n    <div>\n      <h2>\n        {optionType + \"S\"} for {new Date(expirationDate).toDateString()}\n      </h2>\n      <table>\n        <thead>\n          <tr>{headitems}</tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n};\nexport default Option;\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js\";\n\nconst Payoff = ({ title, ticker, data, labels }) => {\n  useEffect(() => {\n    const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n    new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            lineTension: 0,\n            fill: false,\n            label: ticker,\n            data: data,\n            backgroundColor: [\"red\"],\n            borderColor: [\"red\"],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: true,\n          text: title,\n        },\n        scales: {\n          //   yAxes: [\n          //     {\n          //       ticks: {\n          //         suggestedMin: -12,\n          //         suggestedMax: 15,\n          //       },\n          //     },\n          //   ],\n          // xAxes: [\n          //   {\n          //     ticks: {\n          //       suggestedMin: 0,\n          //       suggestedMax: 400,\n          //       stepSize: 1,\n          //     },\n          //   },\n          // ],\n        },\n      },\n    });\n  }, [data, labels, ticker, title]);\n  return (\n    <div\n      style={{\n        margin: \"auto\",\n        width: \"600px\",\n      }}\n    >\n      <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n    </div>\n  );\n};\n\nexport default Payoff;\n","export const getPayoffData = (options) => {\n  const maxStrike = getMaxStrike(options);\n  const length = Math.floor(maxStrike * 1.25);\n  const keys = Object.keys(options);\n  const data = new Array(length).fill(0);\n  const labels = [];\n  const cost = getTotalCost(options);\n\n  for (let i = 0; i < data.length; i++) {\n    labels.push(i);\n    fillPayoffArray(data, i, options, keys, cost);\n  }\n\n  return { data, labels };\n};\n\nexport const evaluatePayoffFunc = (option, price) => {\n  if (option.type === \"CALL\") {\n    if (option.contractName.includes(\"LONG\")) {\n      return Math.max(price - parseInt(option.strike), 0) * option.amount;\n    }\n    return Math.min(0, option.strike - price) * option.amount;\n  } else if (option.type === \"PUT\") {\n    if (option.contractName.includes(\"LONG\")) {\n      return Math.max(parseInt(option.strike) - price, 0) * option.amount;\n    }\n    return Math.min(0, price - option.strike) * option.amount;\n  } else if (option.type === \"STOCK\") {\n    if (option.contractName.includes(\"LONG\")) {\n      return (price - option.strike) * option.amount;\n    }\n    return (option.strike - price) * option.amount;\n  }\n};\n\nexport const getMaxStrike = (options) => {\n  const keys = Object.keys(options);\n  let max = 0;\n  keys.forEach((key) => {\n    if (options[key].strike > max) {\n      max = options[key].strike;\n    }\n  });\n  return max;\n};\n\nconst fillPayoffArray = (matrix, index, options, keys, cost) => {\n  for (let i = 0; i < keys.length; i++) {\n    matrix[index] += evaluatePayoffFunc(options[keys[i]], index) - cost;\n  }\n};\n\nconst getTotalCost = (options) => {\n  const keys = Object.keys(options);\n  let cost = 0;\n  keys.forEach((key) => {\n    if (options[key].contractName.includes(\"SHORT\")) {\n      cost -= options[key].bid * options[key].amount;\n    } else {\n      cost += options[key].ask * options[key].amount;\n    }\n  });\n  return cost;\n};\n","import React from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Delete from \"./Delete.svg\";\nimport { useStore } from \"../../../hooks-store/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst OptionControls = ({\n  option,\n  option: { contractName, strike, amount, ask, type },\n  removeOption,\n}) => {\n  const dispatch = useStore()[1];\n  const classes = useStyles();\n  return (\n    <ExpansionPanel key={contractName} elevation={12}>\n      <ExpansionPanelSummary>\n        <Typography className={classes.heading}>\n          {\" \"}\n          {contractName} Strike: {strike}{\" \"}\n          {contractName.includes(\"SHORT\") ? \"Premium\" : \"Cost\"}: {ask * amount}{\" \"}\n          Amount: {amount} Type: {type}\n        </Typography>\n        <EditIcon />\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <TextField\n          id=\"standard-number\"\n          label=\"Amount\"\n          type=\"number\"\n          defaultValue={amount}\n          onChange={(e) =>\n            dispatch(\"SET_AMOUNT\", { option: option.contractName, amount: e.target.value })\n          }\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id=\"filled-read-only-input\"\n          label={contractName.includes(\"SHORT\") ? \"Premium\" : \"Cost\"}\n          defaultValue={ask * amount}\n          InputProps={{\n            readOnly: true,\n          }}\n          variant=\"filled\"\n        />\n        <img\n          src={Delete}\n          alt=\"Remove\"\n          onClick={() => removeOption(contractName)}\n        ></img>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n\nexport default OptionControls;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport Payoff from \"../Charts/Payoff/Payoff\";\nimport { getPayoffData } from \"./utility\";\nimport OptionControls from \"./OptionControls\";\nimport { useStore } from \"../../../hooks-store/store\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withRouter } from \"react-router\";\n\nconst useStyles = makeStyles({\n  container: {\n    padding: \"10px\",\n  },\n});\n\nconst Portfolio = ({ history }) => {\n  const classes = useStyles();\n  const [state, dispatch] = useStore();\n  const [Data, setData] = useState([]);\n  const [Labels, setLabels] = useState([]);\n  const [view, setView] = useState(false);\n  const { portfolio } = state;\n\n  useEffect(() => {\n    if (Object.keys(portfolio).length === 0) return setView(false);\n    const { data, labels } = getPayoffData(portfolio);\n    setData(data);\n    setLabels(labels);\n  }, [portfolio]);\n\n  let list = Object.keys(portfolio).map((key) => {\n    const o = portfolio[key];\n    return (\n      <OptionControls\n        key={o.contractName}\n        option={o}\n        removeOption={() =>\n          dispatch(\"REMOVE_OPTION\", { contract: o.contractName })\n        }\n      />\n    );\n  });\n  console.log(portfolio, state);\n  return (\n    <>\n      <Paper className={classes.container}>\n        <div>\n          <h3>Analyze Option Portfolio:</h3>\n          {list}\n          {list.length > 0 && (\n            <>\n              <Button color=\"primary\" onClick={() => setView(true)}>\n                View Chart\n              </Button>\n              <Button color=\"primary\" onClick={() => setView(false)}>\n                Hide Chart\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={() =>\n                  dispatch(\"ADD_OPTION\", {\n                    option: {\n                      contractName: state.stock.ticker,\n                      type: \"STOCK\",\n                      strike: state.stock.data.priceClose,\n                      bid: 0,\n                      ask: 0,\n                    },\n                    direction: \"LONG\",\n                  })\n                }\n              >\n                Add Stock Purchase\n              </Button>\n            </>\n          )}\n        </div>\n        {view && <Payoff title={\"Some Title\"} data={Data} labels={Labels} />}\n      </Paper>\n    </>\n  );\n};\n\nexport default withRouter(Portfolio);\n","import { initStore } from \"./store\";\n\nconst configureStore = () => {\n  const actions = {\n    \n    ADD_OPTION: (state, action) => {\n      const newPortfolio = { ...state.portfolio };\n      const option = action.option;\n      option.contractName = option.contractName.replace(\"LONG\", \"\");\n      option.contractName = option.contractName.replace(\"SHORT\", \"\");\n      option.contractName += action.direction;\n      if (option.contractName in newPortfolio) {\n        newPortfolio[option.contractName].amount += 1;\n      } else {\n        option.amount = 1;\n        newPortfolio[option.contractName] = option;\n      }\n      return { ...state, portfolio: newPortfolio };\n    },\n\n    REMOVE_OPTION: (state, action) => {\n      const newPortfolio = { ...state.portfolio };\n      delete newPortfolio[action.contract];\n      return { ...state, portfolio: newPortfolio };\n    },\n\n    CLEAR_PORTFOLIO: (state, action) => {\n      return { ...state, portfolio: {} };\n    },\n\n    SET_AMOUNT: (state, action) => {\n      const newPortfolio = { ...state.portfolio };\n      newPortfolio[action.option].amount = action.amount;\n      return { ...state, portfolio: newPortfolio };\n    },\n\n    ADD_STOCK: (state, action) => {\n      return { ...state, stock: action };\n    },\n  };\n  initStore(actions, { portfolio: {} });\n};\n\nexport default configureStore;\n","import React, { useState } from \"react\";\nimport \"./Options.module.css\";\nimport TickerOptions from \"../../components/SecurityChartForm/Ticker/Ticker\";\nimport { updateObject, optionListView } from \"../../shared/utility\";\nimport { formatAPIRequestOptions } from \"../../shared/functions\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Option from \"../../components/Option/Option\";\nimport classes from \"./Options.module.css\";\nimport SecurityInfo from \"../../components/SecurityInfo/SecurityInfo\";\nimport Portfolio from \"../../components/Option/Portfolio/Portfolio\";\nimport configurePortfolioStore from \"../../hooks-store/optionPortfolio\";\nimport { useStore } from \"../../hooks-store/store\";\n\nconfigurePortfolioStore();\n\nconst Options = ({ history }) => {\n  const [ticker, setTicker] = useState({\n    elementType: \"select\",\n    elementConfig: {\n      options: [],\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    label: \"Ticker Symbol\",\n  });\n  const [dates, setDates] = useState({\n    elementType: \"select\",\n    elementConfig: {\n      options: [],\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    label: \"Expiration Date\",\n    touched: false,\n  });\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [viewOptionChain, setViewOptionChain] = useState(false);\n  const [optionType, setOptionType] = useState(\"CALL\");\n  const [displayList, setDisplayList] = useState(true);\n  const dispatch = useStore(false)[1];\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setViewOptionChain(true);\n  };\n\n  const inputTickerChangedHandler = async (event) => {\n    const updatedFormElement = updateObject(ticker, {\n      ...ticker,\n      value: event.target.value,\n    });\n    dispatch(\"CLEAR_PORTFOLIO\");\n    history.push(\"/options/\" + event.target.value + \"/\");\n    setTicker(updatedFormElement);\n    const expDates = await formatAPIRequestOptions(event.target.value);\n\n    const date = {\n      ...dates,\n      elementConfig: {\n        options: expDates,\n      },\n    };\n    setDates(date);\n  };\n  const toggleListHandler = () => {\n    setDisplayList(!displayList);\n  };\n  const inputChangedHandler = (event) => {\n    dispatch(\"CLEAR_PORTFOLIO\");\n    const updatedFormElement = updateObject(dates, {\n      ...dates,\n      value: event.target.value,\n    });\n    let formIsValid = true;\n    for (let inputIdentifier in updatedFormElement) {\n      if (updatedFormElement[inputIdentifier].valid === false) {\n        formIsValid = false;\n      }\n    }\n    setDates(updatedFormElement);\n    setFormIsValid(formIsValid);\n  };\n\n  const toggleOptionTypeHandler = (type) => {\n    setOptionType(type);\n  };\n  const date = dates;\n  let expirationDates = null;\n  if (date.elementConfig.options.length > 0) {\n    expirationDates = (\n      <Input\n        key={1}\n        elementType={date.elementType}\n        elementConfig={date.elementConfig}\n        invalid={!true}\n        shouldValidate={date.validation.required}\n        value={date.value}\n        touched={date.touched}\n        label={date.label}\n        changed={(event) => inputChangedHandler(event, 1)}\n      />\n    );\n  }\n\n  return (\n    <div className={classes.Container}>\n      {(ticker.value !== \"\") && <SecurityInfo ticker={ticker.value} />}\n      <Portfolio />\n      <form onSubmit={handleSubmit}>\n        <TickerOptions\n          ticker={ticker}\n          inputChangedHandler={inputTickerChangedHandler}\n        />\n        {expirationDates}\n        <Button btnType=\"Success\" disabled={!formIsValid}>\n          Submit\n        </Button>\n      </form>\n      <Button btnType=\"Info\" clicked={() => toggleOptionTypeHandler(\"CALL\")}>\n        Calls\n      </Button>\n      <Button btnType=\"Info\" clicked={() => toggleOptionTypeHandler(\"PUT\")}>\n        Puts\n      </Button>\n      <div style={{ display: \"inline-block\" }}>\n        <p>Display: </p> <p onClick={toggleListHandler}>List</p> <p>Straddle</p>\n      </div>\n\n      {viewOptionChain && (\n        <Option\n          optionDisplay={optionListView}\n          ticker={ticker.value}\n          expirationDate={dates.value}\n          optionType={optionType}\n          displayList={displayList}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Options;\n","import axios from \"axios\";\nimport { API_KEY } from \"./key\";\nconst base = \"https://finnhub.io/api/v1/stock/candle?symbol=\";\n\nexport const formatAPIRequest = (symbol, timeframe, startDate, endDate) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    const result = [];\n    axios\n      .get(url)\n      .then((res) => {\n        const o = res.data.o;\n        const h = res.data.h;\n        const l = res.data.l;\n        const c = res.data.c;\n        const t = res.data.t;\n\n        for (let i = 0; i < o.length; i++) {\n          result.push({\n            x: new Date(t[i]) * 1000,\n            y: [o[i], h[i], l[i], c[i]],\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getTickerSymbols = (instrument) => {\n  let type = instrument;\n  let exchange = \"\";\n  switch (type) {\n    case \"stock\":\n      exchange = \"US\";\n      break;\n    case \"forex\":\n      exchange = \"oanda\";\n      break;\n    case \"crypto\":\n      exchange = \"binance\";\n      break;\n    default:\n      type = \"stock\";\n      exchange = \"US\";\n  }\n  return new Promise((resolve, reject) => {\n    const url =\n      \"https://finnhub.io/api/v1/\" +\n      type +\n      \"/symbol?exchange=\" +\n      exchange +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const convertFromDateToUNIXTimeStamp = (date) => {\n  const result = new Date(date).getTime() / 1000;\n  return result.toString();\n};\n\nexport const getTickerExpectedReturns = (\n  symbol,\n  timeframe,\n  startDate,\n  endDate\n) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        let sum = 0;\n        var divisor = 0;\n        const c = res.data.c;\n        console.log(c);\n        const returnsArray = [];\n        for (let i = 0; i < c.length; i++) {\n          if (i !== c.length - 1) {\n            sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n            returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n            divisor += 1;\n          }\n        }\n        const average = sum / divisor;\n        const stDev = standardDeviation(returnsArray);\n        console.log(returnsArray);\n        console.log(\"stDev\" + stDev);\n        console.log(\"ER\" + average);\n        resolve([average, stDev]);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getStockCorrelation = async (\n  ticker1,\n  ticker2,\n  startDate,\n  endDate,\n  timeframe\n) => {\n  const url =\n    base +\n    ticker1 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n\n  const url2 =\n    base +\n    ticker2 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n  let sum = 0;\n  await axios.get(url).then((res) => {   \n    const c = res.data.c;\n    const returnsArray = [];\n    \n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum = sum + ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n  sum = 0\n  await axios.get(url2).then((res) => {\n    const c = res.data.c;\n    const returnsArray = [];\n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n};\n\nconst standardDeviation = (arr, usePopulation = false) => {\n  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n  return Math.sqrt(\n    arr\n      .reduce((acc, val) => acc.concat((val - mean) ** 2), [])\n      .reduce((acc, val) => acc + val, 0) /\n      (arr.length - (usePopulation ? 0 : 1))\n  );\n};\n\nexport const formatAPIRequestOptions = (ticker) => {\n  const url =\n    \" https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n  console.log(url);\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const result = [];\n        const responseArray = res.data.data;\n        for (let i = 0; i < responseArray.length; i++) {\n          result.push({\n            key: i,\n            value: responseArray[i].expirationDate,\n            displayValue: responseArray[i].expirationDate,\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getOptionData = (\n  ticker,\n  expirationDate,\n  optionType,\n  optionListView\n) => {\n  const url =\n    \"https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = res.data.data;\n        let result = [];\n        for (let i = 0; i < data.length; i++) {\n          if (expirationDate.localeCompare(data[i].expirationDate) === 0) {\n            if (optionListView) {\n              result = data[i].options[optionType];\n            } else {\n              result = data[i].options.CALL;\n            }\n\n            break;\n          }\n        }\n        resolve(result);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getQuoteData = (symbol) => {\n  const url = \"https://finnhub.io/api/v1/quote?symbol=\" + symbol + API_KEY;\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = {\n          priceClose: res.data.pc,\n          date: new Date(res.data.t).toDateString(),\n        };\n        resolve(data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n"],"sourceRoot":""}