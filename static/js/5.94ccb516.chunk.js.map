{"version":3,"sources":["shared/functions.js","components/UI/Button/Button.module.css","components/UI/Input/Input.module.css","components/SecurityChartForm/StockChartForm.module.css","components/UI/Button/Button.js","components/UI/Input/Input.js","shared/utility.js","components/SecurityChartForm/Ticker/Ticker.js","components/SecurityChartForm/SecurityChartForm.js","components/SecurityGrapher/SecurityGrapher.js","containers/InstrumentChart/InstrumentChart.js"],"names":["base","formatAPIRequest","symbol","timeframe","startDate","endDate","Promise","resolve","reject","url","API_KEY","console","log","result","axios","get","then","res","o","data","h","l","c","t","i","length","push","x","Date","y","catch","error","getTickerSymbols","instrument","type","exchange","tickers","key","value","displayValue","description","convertFromDateToUNIXTimeStamp","date","getTime","toString","getTickerExpectedReturns","sum","divisor","returnsArray","average","stDev","standardDeviation","arr","usePopulation","mean","reduce","acc","val","Math","sqrt","concat","module","exports","button","props","disabled","className","classes","Button","btnType","join","onClick","clicked","style","children","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","onChange","changed","options","map","option","Label","label","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","withRouter","ticker","valid","validation","path","match","inputChangedHandler","useState","instrumentArray","setInstrumentArray","useEffect","slice","Input","event","Fragment","SecurityChartForm","state","inputForm","placeholder","timeFrame","onSubmitHandler","preventDefault","formValues","formElementIdentifier","formSubmit","inputIdentifier","updatedFormElement","target","updatedOrderForm","formIsValid","setState","inputTickerChangedHandler","formElementsArray","this","id","config","form","onSubmit","Ticker","formElement","Form","Component","SecurityGrapher","loading","initialGraph","onSubmitFormHandler","bind","chart","height","title","text","align","xaxis","yaxis","tooltip","enabled","customChart","final","series","React","InstrumentChart"],"mappings":"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","file":"static/js/5.94ccb516.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { API_KEY } from \"./key\";\nconst base = \"https://finnhub.io/api/v1/stock/candle?symbol=\";\n\nexport const formatAPIRequest = (symbol, timeframe, startDate, endDate) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    console.log(\"formatAPIRequest\" + url);\n    const result = [];\n    axios\n      .get(url)\n      .then((res) => {\n        const o = res.data.o;\n        const h = res.data.h;\n        const l = res.data.l;\n        const c = res.data.c;\n        const t = res.data.t;\n\n        for (let i = 0; i < o.length; i++) {\n          result.push({\n            x: new Date(t[i]) * 1000,\n            y: [o[i], h[i], l[i], c[i]],\n          });\n        }\n        console.log(result);\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getTickerSymbols = (instrument) => {\n  let type = instrument;\n  let exchange = \"\"\n  switch (type) {\n    case \"stock\":\n      exchange = \"US\";\n      break;\n    case \"forex\":\n      exchange =  \"oanda\";\n      break;\n    case \"crypto\":\n      exchange = \"binance\";\n      break;\n    default: \n      exchange = \"US\"\n  }\n  return new Promise((resolve, reject) => {\n    const url =\n      \"https://finnhub.io/api/v1/\" +\n      type +\n      \"/symbol?exchange=\" +\n      exchange +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getForexSymbols = () => {\n  return new Promise((resolve, reject) => {\n    const url = \"https://finnhub.io/api/v1/stock/symbol?exchange=US\" + API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const convertFromDateToUNIXTimeStamp = (date) => {\n  const result = new Date(date).getTime() / 1000;\n  return result.toString();\n};\n\nexport const getTickerExpectedReturns = (\n  symbol,\n  timeframe,\n  startDate,\n  endDate\n) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        var sum = 0;\n        var divisor = 0;\n        const c = res.data.c;\n        console.log(c);\n        const returnsArray = [];\n        for (let i = 0; i < c.length; i++) {\n          if (i !== c.length - 1) {\n            sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n            returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n            divisor += 1;\n          }\n        }\n        const average = sum / divisor;\n        const stDev = standardDeviation(returnsArray);\n        console.log(returnsArray);\n        console.log(\"stDev\" + stDev);\n        console.log(\"ER\" + average);\n        resolve([average, stDev]);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst standardDeviation = (arr, usePopulation = false) => {\n  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n  return Math.sqrt(\n    arr\n      .reduce((acc, val) => acc.concat((val - mean) ** 2), [])\n      .reduce((acc, val) => acc + val, 0) /\n      (arr.length - (usePopulation ? 0 : 1))\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"StockChartForm_Form__2JmaI\"};","import React from 'react'\nimport classes from './Button.module.css'\nconst button = props =>(\n    <button  \n    disabled={props.disabled}\n    className={[classes.Button, classes[props.btnType]].join(' ')} \n    onClick={props.clicked}\n    style={props.style}\n    >\n        {props.children}\n    </button>\n)\nexport default button","import React from 'react'\nimport classes from './Input.module.css'\n\nconst input = (props) => {\n    let inputElement = null\n    const inputClasses = [classes.InputElement]\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}/>\n            break\n        case('textarea'):\n            inputElement = <textarea \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}/>\n            break\n        case('select'):\n            inputElement = (\n            <select \n            className={inputClasses.join(' ')}\n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}>\n                {props.elementConfig.options.map((option, key) =>{\n                    return <option key={option.value + key} value={option.value} >{option.displayValue}</option>\n                })}\n\n            </select>\n            \n            )\n            break   \n        default:\n            inputElement = <input \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}/>\n    }\n    return(\n        <div className={inputClasses.join(' ')}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n    \n}\nexport default input","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity = (value, rules) =>{\n    let isValid = true\n    if(!rules){\n        return true\n    }\n    if(rules.required){\n        isValid = (value.trim() !== '' && isValid)\n    }\n    if(rules.minLength){\n        isValid = (value.length >= rules.minLength && isValid)\n    }\n    if(rules.maxLength){\n        isValid = (value.length <= rules.maxLength && isValid)\n    }\n    return isValid\n}","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { getTickerSymbols } from \"../../../shared/functions\";\nimport Input from '../../UI/Input/Input'\n\nconst TickerOptions = ({\n  ticker: {\n    elementType,\n    valid,\n    validation,\n    value,\n    touched,\n    label,\n  },\n  match : {\n    path,\n  },\n  inputChangedHandler\n}) => {\n\n  const [instrumentArray, setInstrumentArray] = useState([]);\n\n  useEffect((instrumentArray) => {\n    console.log(\"Use Effect Called\")\n    const tickersArray = getTickerSymbols(path.slice(1));\n    tickersArray.then((ticker) => setInstrumentArray(ticker));\n    console.log(path)\n  }, [path]);\n\n\n  const elementConfig = {\n    options: instrumentArray\n  }\n  \n  let input = null\n  if(instrumentArray.length > 0){\n   input =  <Input\n    key=\"ticker\"\n    elementType={elementType}\n    elementConfig={elementConfig}\n    invalid={valid}\n    shouldValidate={validation}\n    value={value}\n    touched={touched}\n    label={label}\n    changed={(event) => inputChangedHandler(event, \"ticker\")}\n  />\n  }\n  return (\n    <React.Fragment>\n      {input}\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TickerOptions);\n","import React, { Component } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport { updateObject, checkValidity } from \"../../shared/utility\";\nimport { convertFromDateToUNIXTimeStamp } from \"../../shared/functions\";\nimport classes from \"./StockChartForm.module.css\";\nimport TickerOptions from \"./Ticker/Ticker\";\n\nclass SecurityChartForm extends Component {\n  componentDidMount() {}\n  state = {\n    inputForm: {\n      startDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"Start Date\",\n        },\n        value: \"\",\n        label: \"Start Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      endDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"End Date\",\n        },\n        value: \"\",\n        label: \"End Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      timeFrame: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"1\", displayValue: \"1\" },\n            { value: \"5\", displayValue: \"5\" },\n            { value: \"15\", displayValue: \"15\" },\n            { value: \"30\", displayValue: \"30\" },\n            { value: \"60\", displayValue: \"60\" },\n            { value: \"D\", displayValue: \"D\" },\n            { value: \"W\", displayValue: \"W\" },\n            { value: \"M\", displayValue: \"M\" },\n          ],\n        },\n        value: \"30\",\n        validation: {\n          required: true,\n        },\n        label: \"Time Frame\",\n      },\n    },\n    ticker: {\n      elementType: \"select\",\n      elementConfig: {\n        options: [],\n      },\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      label: \"Ticker Symbol\",\n    },\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const formValues = {};\n    for (let formElementIdentifier in this.state.inputForm) {\n      formValues[formElementIdentifier] = this.state.inputForm[\n        formElementIdentifier\n      ].value;\n    }\n    formValues.ticker = this.state.ticker.value\n    formValues.startDate = convertFromDateToUNIXTimeStamp(formValues.startDate);\n    formValues.endDate = convertFromDateToUNIXTimeStamp(formValues.endDate);\n    console.log(formValues);\n    this.props.formSubmit(formValues);\n  };\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(\n      this.state.inputForm[inputIdentifier],\n      {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.inputForm[inputIdentifier].validation\n        ),\n        touched: true,\n      }\n    );\n    const updatedOrderForm = updateObject(this.state.inputForm, {\n      [inputIdentifier]: updatedFormElement,\n    });\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      if (updatedOrderForm[inputIdentifier].valid === false) {\n        formIsValid = false;\n      }\n    }\n\n    this.setState({ inputForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  inputTickerChangedHandler = (event) => {\n    const updatedFormElement = updateObject(\n      this.state.ticker,\n      {\n        ...this.state.ticker,\n        value: event.target.value,\n      }\n    );\n    this.setState({ ticker: updatedFormElement});\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.inputForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.inputForm[key],\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.onSubmitHandler}>\n        \n        <TickerOptions\n          ticker={this.state.ticker}\n          inputChangedHandler={this.inputTickerChangedHandler}\n        />\n\n        {formElementsArray.map((formElement, key) => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              invalid={!formElement.config.valid}\n              shouldValidate={formElement.config.validation}\n              value={formElement.config.value}\n              touched={formElement.config.touched}\n              label={formElement.config.label}\n              changed={(event) =>\n                this.inputChangedHandler(event, formElement.id)\n              }\n            />\n          );\n        })}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          SUBMIT\n        </Button>\n      </form>\n    );\n\n    return <div className={classes.Form}>{form}</div>;\n  }\n}\n\nexport default SecurityChartForm;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { formatAPIRequest } from \"../../shared/functions\";\nimport SecurityChartForm from \"../../components/SecurityChartForm/SecurityChartForm\";\n\nexport default class SecurityGrapher extends React.Component {\n\n  componentDidMount() {\n    this.onSubmitFormHandler = this.onSubmitFormHandler.bind(this);\n    this.onSubmitFormHandler();\n  }\n\n  state = {\n    ticker: \"\",\n    loading: true,\n    error: null,\n    data: [],\n    initialGraph: {\n      ticker: \"\",\n      timeFrame: \"\",\n      startDate: \"\",\n      endDate: \"\",\n    },\n  };\n\n  onSubmitFormHandler(formValues = this.state.initialGraph) {\n    const data = formatAPIRequest(\n      formValues.ticker,\n      formValues.timeFrame,\n      formValues.startDate,\n      formValues.endDate\n    );\n    data\n      .then((data) =>\n        this.setState({ loading: false, data: data, ticker: formValues.ticker })\n      )\n      .catch((error) => this.setState({ error: error }));\n  }\n\n  render() {\n    const options = {\n      chart: {\n        type: \"candlestick\",\n        height: 350,\n      },\n      title: {\n        text: this.state.ticker,\n        align: \"left\",\n      },\n      xaxis: {\n        type: \"datetime\",\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true,\n        },\n      },\n    };\n\n    let customChart = null;\n    if (!this.state.loading) {\n      const final = [\n        {\n          data: this.state.data,\n        },\n      ];\n      customChart = (\n        <Chart\n          options={options}\n          series={final}\n          type=\"candlestick\"\n          height={350}\n        />\n      );\n    }\n\n    return (\n      <div>\n        {customChart}\n        <SecurityChartForm\n          instrument={this.props.instrument}\n          formSubmit={this.onSubmitFormHandler}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport SecurityGrapher from \"../../components/SecurityGrapher/SecurityGrapher\"\n\nconst InstrumentChart = props => {\n\n    return(\n        <SecurityGrapher instrument={props.match.path.slice(1)}/>\n    )\n        \n        \n    \n}\nexport default InstrumentChart"],"sourceRoot":""}