{"version":3,"sources":["components/InfoCard/InfoCard.module.css","assets/images/covid.png","containers/COVID/COVID.module.css","components/InfoCard/InfoCard.js","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.js","containers/COVID/COVID.js"],"names":["module","exports","InfoCard","data","confirmed","recovered","deaths","lastUpdate","className","classes","Container","Grid","container","spacing","CardContainer","item","xs","component","Card","cx","Infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Recovered","Deaths","url","fetchData","country","a","flexUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","useStyles","makeStyles","margin","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","formControl","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","COVID","state","fetchedData","setState","this","Image","src","VirusImage","alt","Component"],"mappings":"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","file":"static/js/14.5562d148.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"InfoCard_Container__2gimu\",\"Card\":\"InfoCard_Card__23h69\",\"Infected\":\"InfoCard_Infected__XiavK\",\"Recovered\":\"InfoCard_Recovered__3jS22\",\"Deaths\":\"InfoCard_Deaths__tCPtv\",\"CardContainer\":\"InfoCard_CardContainer__2bN0c\"};","module.exports = __webpack_public_path__ + \"static/media/covid.1f77e957.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"COVID_Container__3Wl_r\",\"Image\":\"COVID_Image__1KTjP\"};","import React from \"react\";\nimport classes from \"./InfoCard.module.css\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nconst InfoCard = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading....\";\n  }\n  return (\n    <div className={classes.Container}>\n      <Grid\n        container\n        spacing={1}\n        className={classes.CardContainer}\n      >\n        <Grid\n          container\n          item\n          xs={12}\n          spacing={3}\n          component={Card}\n          className={cx(classes.Card, classes.Infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Active Cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          container\n          item\n          xs={12}\n          spacing={3}\n          component={Card}\n          className={cx(classes.Card, classes.Recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Recoveries from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          container\n          item\n          xs={12}\n          spacing={3}\n          component={Card}\n          className={cx(classes.Card, classes.Deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of Deaths from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default InfoCard;\n","import axios from \"axios\";\nimport HashTable from \"../shared/hashTable\";\nconst url = \"https://covid19.mathdro.id/api\";\nconst econDataUrl =\n  \"https://finnhub.io/api/v1/economic?code=MA-XXX-678073&token=boqata7rh5rfjhndqf1g\";\n\nexport const fetchData = async (country) => {\n  let flexUrl = url;\n\n  if (country) {\n    flexUrl = url + \"/countries/\" + country;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(flexUrl);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst formatUrl = (countryCode) => {\n  return econDataUrl.replace(\"XXX\", countryCode);\n};\n\nexport const fetchEconomicData = async (country) => {\n  try {\n    const { data } = await axios.get(formatUrl(country));\n    const modifiedData = [];\n    data.forEach((dailyData) => {\n      modifiedData.unshift({ date: dailyData[0], value: dailyData[1] });\n    });\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyCountries = async () => {\n  const economicCodesUrl =\n    \"https://finnhub.io/api/v1/economic/code?token=boqata7rh5rfjhndqf1g\";\n  const { data } = await axios.get(economicCodesUrl);\n  const countries = new HashTable();\n  data.forEach(async (item) => {\n    console.log(item);\n    if (countries.getItem(item.country) === null) {\n      const code = item.code.slice(3, 6);\n      await countries.setItem(item.country, code);\n    }\n    // if (economicCodes.getItem(item.name) == null) {\n    //   const code = item.code.slice(7);\n    //   economicCodes.setItem(item.name, code);\n    // }\n  });\n\n  return countries;\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(url + \"/daily\");\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(url + \"/countries\");\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  container: {\n    margin: \"auto\",\n  },\n});\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0,0,255,0.5)\",\n              \"rgba(0,255,0,0.5)\",\n              \"rgba(255,0,0,0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current State in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={classes.container}>\n      <div>{country ? barChart : lineChart}</div>\n    </div>\n  );\n};\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport { fetchCountries } from \"../../api\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  formControl: {\n    margin: \"auto\",\n  },\n});\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={classes.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"\">Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\nexport default CountryPicker;\n","import React, { Component } from \"react\";\nimport InfoCard from \"../../components/InfoCard/InfoCard\";\nimport {fetchData} from '../../api'\nimport Chart from '../../components/Chart/Chart'\nimport CountryPicker from '../../components/CountryPicker/CountryPicker'\nimport VirusImage from '../../assets/images/covid.png'\nimport classes from './COVID.module.css'\nclass COVID extends Component {\n\n  state = {\n    data: {},\n    country: \"\"\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n      this.setState({\n          data: fetchedData\n      })\n\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country)\n    this.setState({data : fetchedData, country: country})\n  }\n\n  render() {\n      const { data } = this.state\n    return (\n      <div className={classes.Container}>\n        <h1>C<img className={classes.Image} src={VirusImage} alt=\"COVID-19\"></img>VID-19</h1>\n        <InfoCard data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={this.state.country}></Chart>\n      </div>\n    );\n  }\n}\nexport default COVID;\n"],"sourceRoot":""}