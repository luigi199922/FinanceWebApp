{"version":3,"sources":["shared/functions.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/UI/Button/Button.module.css","components/UI/Input/Input.module.css","components/SecurityChartForm/StockChartForm.module.css","components/UI/Button/Button.js","components/UI/Input/Input.js","shared/utility.js","components/SecurityChartForm/Ticker/Ticker.js","components/SecurityChartForm/SecurityChartForm.js","containers/Stocks/Stocks.js"],"names":["base","formatAPIRequest","symbol","timeframe","startDate","endDate","Promise","resolve","reject","url","API_KEY","console","log","result","axios","get","then","res","o","data","h","l","c","t","i","length","push","x","Date","y","catch","error","getTickerSymbols","instrument","type","exchange","tickers","key","value","displayValue","description","convertFromDateToUNIXTimeStamp","date","getTime","toString","getTickerExpectedReturns","sum","divisor","returnsArray","average","stDev","standardDeviation","arr","usePopulation","mean","reduce","acc","val","Math","sqrt","concat","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","module","exports","button","props","disabled","className","classes","Button","btnType","join","onClick","clicked","style","children","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","onChange","changed","options","map","option","Label","label","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","withRouter","ticker","valid","validation","path","match","inputChangedHandler","useState","instrumentArray","setInstrumentArray","useEffect","slice","Input","event","Fragment","SecurityChartForm","state","inputForm","placeholder","timeFrame","onSubmitHandler","preventDefault","formValues","formElementIdentifier","formSubmit","inputIdentifier","updatedFormElement","updatedOrderForm","formIsValid","setState","inputTickerChangedHandler","formElementsArray","this","id","config","form","onSubmit","Ticker","formElement","Form","Component","Stocks","loading","expectedReturns","timePeriod","initialTicker","onSubmitFormHandler","bind","stockInfo","margin","forex","React"],"mappings":"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","file":"static/js/4.754ce0f8.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { API_KEY } from \"./key\";\nconst base = \"https://finnhub.io/api/v1/stock/candle?symbol=\";\n\nexport const formatAPIRequest = (symbol, timeframe, startDate, endDate) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    console.log(\"formatAPIRequest\" + url);\n    const result = [];\n    axios\n      .get(url)\n      .then((res) => {\n        const o = res.data.o;\n        const h = res.data.h;\n        const l = res.data.l;\n        const c = res.data.c;\n        const t = res.data.t;\n\n        for (let i = 0; i < o.length; i++) {\n          result.push({\n            x: new Date(t[i]) * 1000,\n            y: [o[i], h[i], l[i], c[i]],\n          });\n        }\n        console.log(result);\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getTickerSymbols = (instrument) => {\n  let type = instrument;\n  let exchange = \"\"\n  switch (type) {\n    case \"stock\":\n      exchange = \"US\";\n      break;\n    case \"forex\":\n      exchange =  \"oanda\";\n      break;\n    case \"crypto\":\n      exchange = \"binance\";\n      break;\n    default: \n      exchange = \"US\"\n  }\n  return new Promise((resolve, reject) => {\n    const url =\n      \"https://finnhub.io/api/v1/\" +\n      type +\n      \"/symbol?exchange=\" +\n      exchange +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getForexSymbols = () => {\n  return new Promise((resolve, reject) => {\n    const url = \"https://finnhub.io/api/v1/stock/symbol?exchange=US\" + API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const convertFromDateToUNIXTimeStamp = (date) => {\n  const result = new Date(date).getTime() / 1000;\n  return result.toString();\n};\n\nexport const getTickerExpectedReturns = (\n  symbol,\n  timeframe,\n  startDate,\n  endDate\n) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        var sum = 0;\n        var divisor = 0;\n        const c = res.data.c;\n        console.log(c);\n        const returnsArray = [];\n        for (let i = 0; i < c.length; i++) {\n          if (i !== c.length - 1) {\n            sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n            returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n            divisor += 1;\n          }\n        }\n        const average = sum / divisor;\n        const stDev = standardDeviation(returnsArray);\n        console.log(returnsArray);\n        console.log(\"stDev\" + stDev);\n        console.log(\"ER\" + average);\n        resolve([average, stDev]);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nconst standardDeviation = (arr, usePopulation = false) => {\n  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n  return Math.sqrt(\n    arr\n      .reduce((acc, val) => acc.concat((val - mean) ** 2), [])\n      .reduce((acc, val) => acc + val, 0) /\n      (arr.length - (usePopulation ? 0 : 1))\n  );\n};\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"StockChartForm_Form__2JmaI\"};","import React from 'react'\nimport classes from './Button.module.css'\nconst button = props =>(\n    <button  \n    disabled={props.disabled}\n    className={[classes.Button, classes[props.btnType]].join(' ')} \n    onClick={props.clicked}\n    style={props.style}\n    >\n        {props.children}\n    </button>\n)\nexport default button","import React from 'react'\nimport classes from './Input.module.css'\n\nconst input = (props) => {\n    let inputElement = null\n    const inputClasses = [classes.InputElement]\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n    switch(props.elementType){\n        case('input'):\n            inputElement = <input \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}/>\n            break\n        case('textarea'):\n            inputElement = <textarea \n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}/>\n            break\n        case('select'):\n            inputElement = (\n            <select \n            className={inputClasses.join(' ')}\n            {...props.elementConfig} \n            value={props.value}\n            onChange={props.changed}>\n                {props.elementConfig.options.map((option, key) =>{\n                    return <option key={option.value + key} value={option.value} >{option.displayValue}</option>\n                })}\n\n            </select>\n            \n            )\n            break   \n        default:\n            inputElement = <input \n            className={inputClasses.join(' ')} \n            {...props.elementConfig} \n            value={props.value}/>\n    }\n    return(\n        <div className={inputClasses.join(' ')}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n    \n}\nexport default input","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity = (value, rules) =>{\n    let isValid = true\n    if(!rules){\n        return true\n    }\n    if(rules.required){\n        isValid = (value.trim() !== '' && isValid)\n    }\n    if(rules.minLength){\n        isValid = (value.length >= rules.minLength && isValid)\n    }\n    if(rules.maxLength){\n        isValid = (value.length <= rules.maxLength && isValid)\n    }\n    return isValid\n}","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { getTickerSymbols } from \"../../../shared/functions\";\nimport Input from '../../UI/Input/Input'\n\nconst TickerOptions = ({\n  ticker: {\n    elementType,\n    valid,\n    validation,\n    value,\n    touched,\n    label,\n  },\n  match : {\n    path,\n  },\n  inputChangedHandler\n}) => {\n\n  const [instrumentArray, setInstrumentArray] = useState([]);\n\n  useEffect((instrumentArray) => {\n    console.log(\"Use Effect Called\")\n    const tickersArray = getTickerSymbols(path.slice(1));\n    tickersArray.then((ticker) => setInstrumentArray(ticker));\n    console.log(path)\n  }, [path]);\n\n\n  const elementConfig = {\n    options: instrumentArray\n  }\n  \n  let input = null\n  if(instrumentArray.length > 0){\n   input =  <Input\n    key=\"ticker\"\n    elementType={elementType}\n    elementConfig={elementConfig}\n    invalid={valid}\n    shouldValidate={validation}\n    value={value}\n    touched={touched}\n    label={label}\n    changed={(event) => inputChangedHandler(event, \"ticker\")}\n  />\n  }\n  return (\n    <React.Fragment>\n      {input}\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TickerOptions);\n","import React, { Component } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport { updateObject, checkValidity } from \"../../shared/utility\";\nimport { convertFromDateToUNIXTimeStamp } from \"../../shared/functions\";\nimport classes from \"./StockChartForm.module.css\";\nimport TickerOptions from \"./Ticker/Ticker\";\n\nclass SecurityChartForm extends Component {\n  componentDidMount() {}\n  state = {\n    inputForm: {\n      startDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"Start Date\",\n        },\n        value: \"\",\n        label: \"Start Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      endDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"End Date\",\n        },\n        value: \"\",\n        label: \"End Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      timeFrame: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"1\", displayValue: \"1\" },\n            { value: \"5\", displayValue: \"5\" },\n            { value: \"15\", displayValue: \"15\" },\n            { value: \"30\", displayValue: \"30\" },\n            { value: \"60\", displayValue: \"60\" },\n            { value: \"D\", displayValue: \"D\" },\n            { value: \"W\", displayValue: \"W\" },\n            { value: \"M\", displayValue: \"M\" },\n          ],\n        },\n        value: \"30\",\n        validation: {\n          required: true,\n        },\n        label: \"Time Frame\",\n      },\n    },\n    ticker: {\n      elementType: \"select\",\n      elementConfig: {\n        options: [],\n      },\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      label: \"Ticker Symbol\",\n    },\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const formValues = {};\n    for (let formElementIdentifier in this.state.inputForm) {\n      formValues[formElementIdentifier] = this.state.inputForm[\n        formElementIdentifier\n      ].value;\n    }\n    formValues.ticker = this.state.ticker.value\n    formValues.startDate = convertFromDateToUNIXTimeStamp(formValues.startDate);\n    formValues.endDate = convertFromDateToUNIXTimeStamp(formValues.endDate);\n    console.log(formValues);\n    this.props.formSubmit(formValues);\n  };\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(\n      this.state.inputForm[inputIdentifier],\n      {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.inputForm[inputIdentifier].validation\n        ),\n        touched: true,\n      }\n    );\n    const updatedOrderForm = updateObject(this.state.inputForm, {\n      [inputIdentifier]: updatedFormElement,\n    });\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      if (updatedOrderForm[inputIdentifier].valid === false) {\n        formIsValid = false;\n      }\n    }\n\n    this.setState({ inputForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  inputTickerChangedHandler = (event) => {\n    const updatedFormElement = updateObject(\n      this.state.ticker,\n      {\n        ...this.state.ticker,\n        value: event.target.value,\n      }\n    );\n    this.setState({ ticker: updatedFormElement});\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.inputForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.inputForm[key],\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.onSubmitHandler}>\n        \n        <TickerOptions\n          ticker={this.state.ticker}\n          inputChangedHandler={this.inputTickerChangedHandler}\n        />\n\n        {formElementsArray.map((formElement, key) => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              invalid={!formElement.config.valid}\n              shouldValidate={formElement.config.validation}\n              value={formElement.config.value}\n              touched={formElement.config.touched}\n              label={formElement.config.label}\n              changed={(event) =>\n                this.inputChangedHandler(event, formElement.id)\n              }\n            />\n          );\n        })}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          SUBMIT\n        </Button>\n      </form>\n    );\n\n    return <div className={classes.Form}>{form}</div>;\n  }\n}\n\nexport default SecurityChartForm;\n","import React from \"react\";\nimport { getTickerExpectedReturns } from \"../../shared/functions\";\nimport SecurityChartForm from \"../../components/SecurityChartForm/SecurityChartForm\";\n\nexport default class Stocks extends React.Component {\n  componentDidMount() {\n    this.onSubmitFormHandler = this.onSubmitFormHandler.bind(this);\n    this.onSubmitFormHandler();\n  }\n  onSubmitFormHandler(formValues = this.state.initialTicker) {\n    const data = getTickerExpectedReturns(\n      formValues.ticker,\n      formValues.timeFrame,\n      formValues.startDate,\n      formValues.endDate\n    );\n    data\n      .then(([average, stDev]) =>\n        this.setState({\n          loading: false,\n          expectedReturns: average,\n          stDev: stDev,\n          ticker: formValues.ticker,\n        })\n      )\n      .catch((error) => this.setState({ error: error }));\n  }\n\n  state = {\n    loading: true,\n    ticker: \"AAPL\",\n    expectedReturns: 0,\n    stDev: 0,\n    timePeriod: \"\",\n    error: null,\n    initialTicker: {\n      ticker: \"EPZM\",\n      timeFrame: \"15\",\n      startDate: \"1572651390\",\n      endDate: \"1573910590\",\n    },\n  };\n\n  render() {\n    let stockInfo = null;\n    if (!this.state.loading) {\n      stockInfo = (\n        <div style={{margin: \"auto\"}}>\n          <h2>{this.state.ticker}</h2>\n          <p>Expected Returns: {this.state.expectedReturns} %</p>\n          <p>Risk: {this.state.stDev} %</p>\n        </div>\n      );\n    }\n    return (\n      <div>\n        {stockInfo}\n        <SecurityChartForm forex={false} formSubmit={this.onSubmitFormHandler} />\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}