{"version":3,"sources":["components/Row/RowTable.js","components/TableHeader/TableHeader.js","components/Option/OptionTable.js","containers/OptionForm/OptionForm.js","containers/Options/OptionsT.js"],"names":["RowTable","props","option","lastPrice","volume","delta","gamma","theta","vega","impliedVolatility","bid","ask","strike","TableHeader","OptionTable","callrows","data","options","PUT","map","key","putrows","CALL","style","width","colSpan","name","expirationDate","OptionForm","handleChange","event","setState","nameToSubmit","target","value","toUpperCase","handleSubmit","preventDefault","url","state","baseURL","replace","console","log","axios","get","then","res","code","exchange","nametoSubmit","bind","onSubmit","this","method","type","onChange","React","Component","Options","view","loading","request","ViewHandler","dateOptions","className","minHeight","onClick"],"mappings":"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","file":"static/js/8.e2fa871e.chunk.js","sourcesContent":["import React from 'react'\n\nconst RowTable = props =>{\n    return(\n        <tbody>\n            <tr>\n                <td>{props.option.lastPrice}</td>\n                <td>{props.option.volume}</td>\n                <td>{props.option.delta}</td>\n                <td>{props.option.gamma}</td>\n                <td>{props.option.theta}</td>\n                <td>{props.option.vega}</td>\n                <td>{props.option.impliedVolatility}</td>\n                <td>{props.option.bid}</td>\n                <td>{props.option.ask}</td>\n                <td>{props.option.strike}</td>\n            </tr>\n        </tbody>\n    )\n}\nexport default RowTable","import React from 'react'\n\nconst TableHeader = () => {\n    return(\n        <thead>\n        <tr>\n               \n                <th>\n                    Last\n                </th>\n                <th>\n                    Volume\n                </th>\n                <th>\n                    Delta\n                </th>\n                <th>\n                    Gamma\n                </th>\n                <th>\n                    Theta\n                </th>\n                <th>\n                    Vega\n                </th>\n                <th>\n                    IV\n                </th>\n                <th>\n                    bid\n                </th>\n                <th>\n                    Ask\n                </th>\n                <th>\n                    Strike\n                </th>\n                \n            </tr>\n            </thead>\n    )\n}   \nexport default TableHeader","import React from 'react'\nimport RowTable from '../../components/Row/RowTable'\nimport TableHeader from '../../components/TableHeader/TableHeader'\n\nconst OptionTable = props =>{\n    let callrows = null\n    if (props.data.options){\n        callrows = props.data.options.PUT.map((option,key) =>{\n            return <RowTable option={option} key={key}></RowTable>\n        })\n    }\n    let putrows = null\n    if (props.data.options){\n        putrows = props.data.options.CALL.map((option,key) =>{\n            return <RowTable option={option} key={key}></RowTable>\n        })\n    }\n    return(\n    <div>\n       <table style={{width: \"100%\"}}>\n           <thead>\n            <tr>\n                <th colSpan=\"10\">{props.name} {props.data.expirationDate} Calls</th>\n            </tr>\n           </thead>\n            <TableHeader/>\n            {callrows}\n        </table>\n        <hr></hr>\n        <table style={{width: \"100%\"}}>\n            <thead>\n                <tr>\n                    <th colSpan=\"10\">{props.name} {props.data.expirationDate} Puts</th>\n                </tr>\n            </thead>\n            <TableHeader/>\n            \n            {putrows}\n        </table>\n         \n    </div>\n            \n        \n    )\n}\nexport default OptionTable","import React from 'react'\nimport axios from 'axios'\nexport default class OptionForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        name: \"JNJ\",\n        url: \"https://finnhub.io/api/v1/stock/option-chain?symbol=JNJ&token=boqata7rh5rfjhndqf1g\",\n        nametoSubmit: \"\",\n        data: []\n    };\n      this.handleChange = this.handleChange.bind(this)\n      this.handleSubmit= this.handleChange.bind(this)\n    }\n    \n    handleChange = (event) =>{\n      this.setState({\n          nameToSubmit: event.target.value.toUpperCase()\n      })\n    }\n    handleSubmit = (event) =>{\n      event.preventDefault()\n      const url = this.state.baseURL.replace(\"AAPL\", this.state.nameToSubmit)\n      console.log(url)\n      axios.get(url).then(\n          res => (\n              this.setState({\n                  name: res.data.code,\n                  exchange: res.data.exchange,\n                  data: res.data.data,\n              })\n          )\n      )\n    }\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit} method=\"post\">\n        <p>Enter Stock Ticker: </p>\n        <input type=\"text\" value={this.state.nameToSubmit} onChange={(event)=>this.handleChange(event)}></input>\n        <input type=\"submit\" value=\"Submit\" />\n    </form>\n      );\n    }\n  }","import React from 'react'\nimport axios from 'axios'\nimport OptionTable from '../../components/Option/OptionTable'\nimport \"./OptionsT.module.css\"\nimport OptionForm from '../OptionForm/OptionForm'\nexport default class Options extends React.Component{\n    state = {\n        name: \"AAPL\",\n        exchange: \"\",\n        data: [],\n        view: false,\n        baseURL:\"https://finnhub.io/api/v1/stock/option-chain?symbol=AAPL&token=boqata7rh5rfjhndqf1g\",\n        url: \"\",\n        nameToSubmit: \"\",\n        loading: true\n    }\n    componentDidMount(){\n        axios.get(this.state.baseURL).then(\n            res => (\n                this.setState({\n                    name: res.data.code,\n                    exchange: res.data.exchange,\n                    data: res.data.data,\n                })\n            )\n        )\n    }\n    request = url =>{\n        axios.get(url).then(\n            res => (\n                this.setState({\n                    name: res.data.code,\n                    exchange: res.data.exchange,\n                    data: res.data.data,\n                })\n            )\n        )\n    }\n\n    handleChange = (event) =>{\n        this.setState({\n            nameToSubmit: event.target.value.toUpperCase()\n        })\n        console.log(this.state.nameToSubmit)\n      }\n    handleSubmit = (event) =>{\n        event.preventDefault()\n        const url = this.state.baseURL.replace(\"AAPL\", this.state.nameToSubmit)\n        console.log(url)\n        axios.get(url).then(\n            res => (\n                this.setState({\n                    name: res.data.code,\n                    exchange: res.data.exchange,\n                    data: res.data.data,\n                })\n            )\n        )\n      }\n    ViewHandler = () =>{\n        const view = this.state.view\n        this.setState({view: !view})  \n    }\n    render(){\n        let options = null\n        if (this.state.data){\n            options = this.state.data.map((dateOptions, key)=>{\n                return <OptionTable key={key} data={dateOptions} name={this.state.name}></OptionTable>\n            })\n        }\n        \n        return(\n            <div className=\"container-fluid text-center\" style={{minHeight: \"500px\"}}>\n                <form onSubmit={this.handleSubmit} method=\"post\">\n                    <p>Enter Stock Ticker: </p>\n                    <input type=\"text\" value={this.state.nameToSubmit} onChange={(event)=>this.handleChange(event)}></input>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n                \n\n                <button onClick={this.ViewHandler} className=\"btn btn-primary\">View</button>\n                <OptionForm/>\n            \n            {this.state.view ? options: null}\n\n            \n                    \n                    \n                \n            </div>\n        )\n    }\n}"],"sourceRoot":""}