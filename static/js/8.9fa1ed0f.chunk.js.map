{"version":3,"sources":["components/SecurityGrapher/SecurityGrapher.js","containers/InstrumentChart/InstrumentChart.js","shared/functions.js","components/UI/Button/Button.js","components/UI/Input/Input.js","shared/utility.js","components/UI/Button/Button.module.css","components/UI/Input/Input.module.css","components/SecurityChartForm/Ticker/Ticker.js","components/SecurityInfo/SecurityInfo.js","components/SecurityInfo/SecurityInfo.module.css","components/SecurityChartForm/SecurityChartForm.js","components/SecurityChartForm/StockChartForm.module.css"],"names":["SecurityGrapher","state","ticker","loading","error","data","initialGraph","timeFrame","startDate","endDate","this","onSubmitFormHandler","bind","formValues","formatAPIRequest","then","setState","catch","options","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","customChart","final","series","securityGrapher","SecurityInfo","SecurityChartForm","instrument","props","formSubmit","React","Component","InstrumentChart","match","path","slice","base","symbol","timeframe","Promise","resolve","reject","url","API_KEY","result","axios","get","res","o","h","l","c","t","i","length","push","x","Date","y","console","log","getTickerSymbols","exchange","tickers","key","value","displayValue","description","convertFromDateToUNIXTimeStamp","date","getTime","toString","getTickerExpectedReturns","sum","divisor","returnsArray","average","stDev","standardDeviation","arr","usePopulation","mean","reduce","acc","val","Math","sqrt","concat","formatAPIRequestOptions","responseArray","expirationDate","getOptionData","optionType","optionListView","localeCompare","CALL","err","getQuoteData","priceClose","pc","toDateString","button","disabled","clicked","style","btnType","children","className","classes","Button","join","onClick","input","invalid","shouldValidate","touched","elementConfig","changed","elementType","label","inputElement","inputClasses","InputElement","Invalid","onChange","map","option","Label","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","optionValues","contractName","contractSize","currency","inTheMoney","lastTradeDateTime","strike","lastPrice","bid","ask","change","changePercent","volume","openInterest","impliedVolatility","delta","gamma","theta","vega","rho","theoretical","intrinsicValue","timeValue","updatedAt","daysBeforeExpiration","module","exports","withRouter","valid","validation","inputChangedHandler","useState","instrumentArray","setInstrumentArray","useEffect","event","Fragment","quoteData","setQuoteData","Container","Price","backgroundColor","inputForm","placeholder","onSubmitHandler","preventDefault","formElementIdentifier","inputIdentifier","updatedFormElement","target","updatedOrderForm","formIsValid","inputTickerChangedHandler","formElementsArray","id","config","form","onSubmit","formElement","Form"],"mappings":"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","file":"static/js/8.9fa1ed0f.chunk.js","sourcesContent":["import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { formatAPIRequest } from \"../../shared/functions\";\nimport SecurityChartForm from \"../SecurityChartForm/SecurityChartForm\";\nimport SecurityInfo from \"../SecurityInfo/SecurityInfo\"\n\nexport default class SecurityGrapher extends React.Component {\n\n  componentDidMount() {\n    this.onSubmitFormHandler = this.onSubmitFormHandler.bind(this);\n    this.onSubmitFormHandler();\n  }\n\n  state = {\n    ticker: \"\",\n    loading: true,\n    error: null,\n    data: [],\n    initialGraph: {\n      ticker: \"\",\n      timeFrame: \"\",\n      startDate: \"\",\n      endDate: \"\",\n    },\n  };\n\n  onSubmitFormHandler(formValues = this.state.initialGraph) {\n    const data = formatAPIRequest(\n      formValues.ticker,\n      formValues.timeFrame,\n      formValues.startDate,\n      formValues.endDate\n    );\n    data\n      .then((data) =>\n        this.setState({ loading: false, data: data, ticker: formValues.ticker })\n      )\n      .catch((error) => this.setState({ error: error }));\n  }\n\n  render() {\n    const options = {\n      chart: {\n        type: \"candlestick\",\n        height: 350,\n      },\n      title: {\n        text: this.state.ticker,\n        align: \"left\",\n      },\n      xaxis: {\n        type: \"datetime\",\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true,\n        },\n      },\n    };\n\n    let customChart = null;\n    if (!this.state.loading) {\n      const final = [\n        {\n          data: this.state.data,\n        },\n      ];\n      customChart = (\n        <Chart\n          options={options}\n          series={final}\n          type=\"candlestick\"\n          height={350}\n        />\n      );\n    }\n    let securityGrapher = null\n    if(this.state.ticker !==\"\"){\n      securityGrapher = <SecurityInfo ticker={this.state.ticker} />\n    }\n    return (\n      <div>\n        {securityGrapher}\n        {customChart}\n        <SecurityChartForm\n          instrument={this.props.instrument}\n          formSubmit={this.onSubmitFormHandler}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport SecurityGrapher from \"../../components/SecurityGrapher/SecurityGrapher\"\n\nconst InstrumentChart = props => {\n\n    return(\n        <SecurityGrapher instrument={props.match.path.slice(1)}/>\n    )\n        \n        \n    \n}\nexport default InstrumentChart","import axios from \"axios\";\nimport { API_KEY } from \"./key\";\nconst base = \"https://finnhub.io/api/v1/stock/candle?symbol=\";\n\nexport const formatAPIRequest = (symbol, timeframe, startDate, endDate) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    const result = [];\n    axios\n      .get(url)\n      .then((res) => {\n        const o = res.data.o;\n        const h = res.data.h;\n        const l = res.data.l;\n        const c = res.data.c;\n        const t = res.data.t;\n\n        for (let i = 0; i < o.length; i++) {\n          result.push({\n            x: new Date(t[i]) * 1000,\n            y: [o[i], h[i], l[i], c[i]],\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getTickerSymbols = (instrument) => {\n  let type = instrument;\n  let exchange = \"\";\n  switch (type) {\n    case \"stock\":\n      exchange = \"US\";\n      break;\n    case \"forex\":\n      exchange = \"oanda\";\n      break;\n    case \"crypto\":\n      exchange = \"binance\";\n      break;\n    default:\n      type = \"stock\";\n      exchange = \"US\";\n  }\n  return new Promise((resolve, reject) => {\n    const url =\n      \"https://finnhub.io/api/v1/\" +\n      type +\n      \"/symbol?exchange=\" +\n      exchange +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const convertFromDateToUNIXTimeStamp = (date) => {\n  const result = new Date(date).getTime() / 1000;\n  return result.toString();\n};\n\nexport const getTickerExpectedReturns = (\n  symbol,\n  timeframe,\n  startDate,\n  endDate\n) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        let sum = 0;\n        var divisor = 0;\n        const c = res.data.c;\n        console.log(c);\n        const returnsArray = [];\n        for (let i = 0; i < c.length; i++) {\n          if (i !== c.length - 1) {\n            sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n            returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n            divisor += 1;\n          }\n        }\n        const average = sum / divisor;\n        const stDev = standardDeviation(returnsArray);\n        console.log(returnsArray);\n        console.log(\"stDev\" + stDev);\n        console.log(\"ER\" + average);\n        resolve([average, stDev]);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getStockCorrelation = async (\n  ticker1,\n  ticker2,\n  startDate,\n  endDate,\n  timeframe\n) => {\n  const url =\n    base +\n    ticker1 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n\n  const url2 =\n    base +\n    ticker2 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n    let sum = 0;\n  await axios.get(url).then((res) => { \n    const c = res.data.c;\n    const returnsArray = [];\n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n  sum = 0\n  await axios.get(url2).then((res) => {\n    const c = res.data.c;\n    const returnsArray = [];\n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n};\n\nconst standardDeviation = (arr, usePopulation = false) => {\n  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n  return Math.sqrt(\n    arr\n      .reduce((acc, val) => acc.concat((val - mean) ** 2), [])\n      .reduce((acc, val) => acc + val, 0) /\n      (arr.length - (usePopulation ? 0 : 1))\n  );\n};\n\nexport const formatAPIRequestOptions = (ticker) => {\n  const url =\n    \" https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n  console.log(url);\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const result = [];\n        const responseArray = res.data.data;\n        for (let i = 0; i < responseArray.length; i++) {\n          result.push({\n            key: i,\n            value: responseArray[i].expirationDate,\n            displayValue: responseArray[i].expirationDate,\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getOptionData = (\n  ticker,\n  expirationDate,\n  optionType,\n  optionListView\n) => {\n  const url =\n    \"https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = res.data.data;\n        let result = [];\n        for (let i = 0; i < data.length; i++) {\n          if (expirationDate.localeCompare(data[i].expirationDate) === 0) {\n            if (optionListView) {\n              result = data[i].options[optionType];\n            } else {\n              result = data[i].options.CALL;\n            }\n\n            break;\n          }\n        }\n        resolve(result);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getQuoteData = (symbol) => {\n  const url = \"https://finnhub.io/api/v1/quote?symbol=\" + symbol + API_KEY;\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = {\n          priceClose: res.data.pc,\n          date: new Date(res.data.t).toDateString(),\n        };\n        resolve(data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\nconst button = ({ disabled, clicked, style, btnType, children}) => (\n  <button\n    disabled={disabled}\n    className={[classes.Button, classes[btnType]].join(\" \")}\n    onClick={clicked}\n    style={style}\n  >\n    {children}\n  </button>\n);\nexport default button;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst input = ({\n  invalid,\n  shouldValidate,\n  touched,\n  elementConfig,\n  value,\n  changed,\n  elementType,\n  label,\n}) => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n  if (invalid && shouldValidate && touched) {\n    inputClasses.push(classes.Invalid);\n  }\n  switch (elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...elementConfig}\n          value={value}\n          onChange={changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea {...elementConfig} value={value} onChange={changed} />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(\" \")}\n          {...elementConfig}\n          value={value}\n          onChange={changed}\n        >\n          {elementConfig.options.map((option, key) => {\n            return (\n              <option key={option.value + key} value={option.value}>\n                {option.displayValue}\n              </option>\n            );\n          })}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...elementConfig}\n          value={value}\n        />\n      );\n  }\n  return (\n    <div className={inputClasses.join(\" \")}>\n      <label className={classes.Label}>{label}</label>\n      {inputElement}\n    </div>\n  );\n};\nexport default input;\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n  if (!rules) {\n    return true;\n  }\n  if (rules.required) {\n    isValid = value.trim() !== \"\" && isValid;\n  }\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n  return isValid;\n};\n\nexport const optionValues = {\n  contractName: \"Contract Name\",\n  contractSize: \"Contract Size\",\n  currency: \"false\",\n  type: \"Type\",\n  inTheMoney: \"In the Money\",\n  lastTradeDateTime: \"Last Traded Date Time\",\n  expirationDate: \"Expiration Date\",\n  strike: \"Strike\",\n  lastPrice: \"Last Price\",\n  bid: \"Bid\",\n  ask: \"ask\",\n  change: \"Change\",\n  changePercent: \"% Change\",\n  volume: \"Volume\",\n  openInterest: \"Open Interest\",\n  impliedVolatility: \"Implied Volatility\",\n  delta: false,\n  gamma: false,\n  theta: false,\n  vega: false,\n  rho: false,\n  theoretical: false,\n  intrinsicValue: false,\n  timeValue: false,\n  updatedAt: false,\n  daysBeforeExpiration: false,\n};\n\nexport const optionStraddleView = {\n    lastPrice: true,\n    change: true,\n    changePercent: true,\n    volume: true,\n    openInterest: true,\n    strike: true,\n}\n\nexport const optionListView = {\n  contractName: true,\n  lastTradeDateTime: true,\n  strike: true,\n  lastPrice: true,\n  bid: true,\n  ask: true,\n  change: true,\n  changePercent: true,\n  volume: true,\n  openInterest: true,\n  impliedVolatility: true,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\",\"Info\":\"Button_Info__sfM4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { getTickerSymbols } from \"../../../shared/functions\";\nimport Input from '../../UI/Input/Input'\n\nconst TickerOptions = ({\n  ticker: {\n    elementType,\n    valid,\n    validation,\n    value,\n    touched,\n    label,\n  },\n  match : {\n    path,\n  },\n  inputChangedHandler\n}) => {\n\n  const [instrumentArray, setInstrumentArray] = useState([]);\n\n  useEffect((instrumentArray) => {\n    console.log(\"Use Effect Called\")\n    const tickersArray = getTickerSymbols(path.slice(1));\n    tickersArray.then((ticker) => setInstrumentArray(ticker));\n    console.log(path)\n  }, [path]);\n\n\n  const elementConfig = {\n    options: instrumentArray\n  }\n  \n  let input = null\n  if(instrumentArray.length > 0){\n   input =  <Input\n    key=\"ticker\"\n    elementType={elementType}\n    elementConfig={elementConfig}\n    invalid={valid}\n    shouldValidate={validation}\n    value={value}\n    touched={touched}\n    label={label}\n    changed={(event) => inputChangedHandler(event, \"ticker\")}\n  />\n  }\n  return (\n    <React.Fragment>\n      {input}\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TickerOptions);\n","import React, {useState, useEffect} from 'react'\nimport {getQuoteData} from '../../shared/functions'\nimport classes from \"./SecurityInfo.module.css\"\nimport Button from \"../UI/Button/Button\"\n\nconst SecurityInfo = ({ticker}) => {\n    const [quoteData, setQuoteData] = useState({})\n    useEffect(()=> {\n        const data = getQuoteData(ticker)\n        data.then((data) => setQuoteData(data))\n    }, [ticker])\n    console.log(quoteData)\n    return(\n        <div className={classes.Container}>\n            <p>{ticker}</p>\n            <p className={classes.Price}>{quoteData.priceClose}</p>\n            <p className={classes.Date}>{quoteData.date}</p>\n            <Button btnType=\"Info\" className={{backgroundColor: \"none\"}}>Buy</Button> \n            <Button btnType=\"Info\" >Sell</Button>        \n        </div>\n    )\n}\nexport default SecurityInfo","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SecurityInfo_Container__1VStK\",\"Price\":\"SecurityInfo_Price__3t1fR\",\"Date\":\"SecurityInfo_Date__Oiu0K\"};","import React, { Component } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport { updateObject, checkValidity } from \"../../shared/utility\";\nimport { convertFromDateToUNIXTimeStamp } from \"../../shared/functions\";\nimport classes from \"./StockChartForm.module.css\";\nimport TickerOptions from \"./Ticker/Ticker\";\n\nclass SecurityChartForm extends Component {\n  state = {\n    inputForm: {\n      startDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"Start Date\",\n        },\n        value: \"\",\n        label: \"Start Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      endDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"End Date\",\n        },\n        value: \"\",\n        label: \"End Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      timeFrame: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"1\", displayValue: \"1\" },\n            { value: \"5\", displayValue: \"5\" },\n            { value: \"15\", displayValue: \"15\" },\n            { value: \"30\", displayValue: \"30\" },\n            { value: \"60\", displayValue: \"60\" },\n            { value: \"D\", displayValue: \"D\" },\n            { value: \"W\", displayValue: \"W\" },\n            { value: \"M\", displayValue: \"M\" },\n          ],\n        },\n        value: \"30\",\n        validation: {\n          required: true,\n        },\n        label: \"Time Frame\",\n      },\n    },\n    ticker: {\n      elementType: \"select\",\n      elementConfig: {\n        options: [],\n      },\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      label: \"Ticker Symbol\",\n    },\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const formValues = {};\n    for (let formElementIdentifier in this.state.inputForm) {\n      formValues[formElementIdentifier] = this.state.inputForm[\n        formElementIdentifier\n      ].value;\n    }\n    formValues.ticker = this.state.ticker.value\n    formValues.startDate = convertFromDateToUNIXTimeStamp(formValues.startDate);\n    formValues.endDate = convertFromDateToUNIXTimeStamp(formValues.endDate);\n    this.props.formSubmit(formValues);\n  };\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(\n      this.state.inputForm[inputIdentifier],\n      {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.inputForm[inputIdentifier].validation\n        ),\n        touched: true,\n      }\n    );\n    const updatedOrderForm = updateObject(this.state.inputForm, {\n      [inputIdentifier]: updatedFormElement,\n    });\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      if (updatedOrderForm[inputIdentifier].valid === false) {\n        formIsValid = false;\n      }\n    }\n\n    this.setState({ inputForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  inputTickerChangedHandler = (event) => {\n    const updatedFormElement = updateObject(\n      this.state.ticker,\n      {\n        ...this.state.ticker,\n        value: event.target.value,\n      }\n    );\n    this.setState({ ticker: updatedFormElement});\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.inputForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.inputForm[key],\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.onSubmitHandler}>\n        \n        <TickerOptions\n          ticker={this.state.ticker}\n          inputChangedHandler={this.inputTickerChangedHandler}\n        />\n\n        {formElementsArray.map((formElement, key) => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              invalid={!formElement.config.valid}\n              shouldValidate={formElement.config.validation}\n              value={formElement.config.value}\n              touched={formElement.config.touched}\n              label={formElement.config.label}\n              changed={(event) =>\n                this.inputChangedHandler(event, formElement.id)\n              }\n            />\n          );\n        })}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          SUBMIT\n        </Button>\n      </form>\n    );\n\n    return <div className={classes.Form}>{form}</div>;\n  }\n}\n\nexport default SecurityChartForm;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"StockChartForm_Form__2JmaI\"};"],"sourceRoot":""}