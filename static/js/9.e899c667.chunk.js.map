{"version":3,"sources":["components/SecurityChartForm/Ticker/Ticker.js","components/SecurityInfo/SecurityInfo.js","components/SecurityInfo/SecurityInfo.module.css","containers/Options/Options.module.css","components/Option/Row/Row.module.css","components/Option/Portfolio/Delete.svg","components/Option/Row/TableData/TableData.js","components/Option/Row/Row.js","components/Option/Option.js","components/Option/Charts/Payoff/Payoff.js","components/Option/Portfolio/utility.js","components/Option/Portfolio/Portfolio.js","containers/Options/Options.js","shared/functions.js"],"names":["withRouter","ticker","elementType","valid","validation","value","touched","label","path","match","inputChangedHandler","useState","instrumentArray","setInstrumentArray","useEffect","console","log","getTickerSymbols","slice","then","elementConfig","options","input","length","key","invalid","shouldValidate","changed","event","Fragment","connect","state","isAuth","undefined","auth","token","history","quoteData","setQuoteData","getQuoteData","data","addToWatchList","a","redirectLogin","axios","patch","symbol","createHTTPHeaders","res","push","className","classes","Container","Price","priceClose","Date","date","btnType","backgroundColor","clicked","module","exports","TD","props","children","Row","TableData","option","optionDisplay","addOption","inTheMoney","Object","keys","map","val","lastTradeDateTime","split","toDateString","toFixed","color","onClick","Option","expirationDate","optionType","optionData","setOptionData","getOptionData","catch","err","rows","contract","contractName","headitems","optionValues","Payoff","title","labels","ctx","document","getElementById","getContext","Chart","type","datasets","lineTension","fill","borderColor","borderWidth","display","text","scales","style","margin","width","id","height","getMaxStrike","max","forEach","strike","fillPayoffArray","matrix","index","cost","i","Math","price","parseInt","amount","getTotalCost","ask","Portfolio","removeOption","Data","setData","Labels","setLabels","view","setView","maxStrike","floor","Array","getPayoffData","list","o","src","Delete","alt","Paper","Options","required","setTicker","dates","setDates","formIsValid","setFormIsValid","viewOptionChain","setViewOptionChain","setOptionType","displayList","setDisplayList","optionPortfolio","setOptionPortfolio","inputTickerChangedHandler","updatedFormElement","updateObject","target","formatAPIRequestOptions","expDates","toggleOptionTypeHandler","expirationDates","Input","inputIdentifier","optionChain","newPortfolio","optionListView","tickerInfo","SecurityInfo","onSubmit","preventDefault","Ticker","Button","disabled","base","formatAPIRequest","timeframe","startDate","endDate","Promise","resolve","reject","url","API_KEY","result","get","h","l","c","t","x","y","error","instrument","exchange","tickers","displayValue","description","convertFromDateToUNIXTimeStamp","getTime","toString","getTickerExpectedReturns","sum","divisor","returnsArray","average","stDev","standardDeviation","arr","usePopulation","mean","reduce","acc","sqrt","concat","responseArray","localeCompare","CALL","pc"],"mappings":"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","file":"static/js/9.e899c667.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { getTickerSymbols } from \"../../../shared/functions\";\nimport Input from '../../UI/Input/Input'\n\nconst TickerOptions = ({\n  ticker: {\n    elementType,\n    valid,\n    validation,\n    value,\n    touched,\n    label,\n  },\n  match : {\n    path,\n  },\n  inputChangedHandler\n}) => {\n\n  const [instrumentArray, setInstrumentArray] = useState([]);\n\n  useEffect((instrumentArray) => {\n    console.log(\"Use Effect Called\")\n    const tickersArray = getTickerSymbols(path.slice(1));\n    tickersArray.then((ticker) => setInstrumentArray(ticker));\n    console.log(path)\n  }, [path]);\n\n\n  const elementConfig = {\n    options: instrumentArray\n  }\n  \n  let input = null\n  if(instrumentArray.length > 0){\n   input =  <Input\n    key=\"ticker\"\n    elementType={elementType}\n    elementConfig={elementConfig}\n    invalid={valid}\n    shouldValidate={validation}\n    value={value}\n    touched={touched}\n    label={label}\n    changed={(event) => inputChangedHandler(event, \"ticker\")}\n  />\n  }\n  return (\n    <React.Fragment>\n      {input}\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TickerOptions);\n","import React, {useState, useEffect} from 'react'\nimport {getQuoteData} from '../../shared/functions'\nimport classes from \"./SecurityInfo.module.css\"\nimport Button from \"../UI/Button/Button\"\nimport {withRouter} from \"react-router\"\nimport axios from \"../../axios/auth\"\nimport {connect} from \"react-redux\"\nimport {createHTTPHeaders} from \"../../shared/utility\"\nconst SecurityInfo = ({ticker, history, isAuth,token}) => {\n    const [quoteData, setQuoteData] = useState({})\n    useEffect(()=> {\n        const data = getQuoteData(ticker)\n        data.then((data) => setQuoteData(data))\n    }, [ticker])\n\n    const addToWatchList = async() => {\n        if(!isAuth) return redirectLogin()\n       const res =  await axios.patch(\"watchlist\", {symbol: ticker}, createHTTPHeaders(token))\n        console.log(res)\n    }\n\n    const redirectLogin = () => {\n        history.push(\"/login\")\n    }\n   console.log(isAuth)\n    return(\n        <div className={classes.Container}>\n            <p>{ticker}</p>\n            <p className={classes.Price}>{quoteData.priceClose}</p>\n            <p className={classes.Date}>{quoteData.date}</p>\n            <Button btnType=\"Info\" className={{backgroundColor: \"none\"}}>Buy</Button> \n            <Button btnType=\"Info\" >Sell</Button>\n            <Button btnType=\"Info\" clicked={addToWatchList}>Add to Favorites</Button>        \n        </div>\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.token !== undefined,\n        token: state.auth.token\n    }\n}\nexport default connect(mapStateToProps)(withRouter(SecurityInfo))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SecurityInfo_Container__1VStK\",\"Price\":\"SecurityInfo_Price__3t1fR\",\"Date\":\"SecurityInfo_Date__Oiu0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Options_Container__10n85\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Row_Row__1ysdh\"};","module.exports = __webpack_public_path__ + \"static/media/Delete.6531b738.svg\";","import React from 'react'\n\nconst TD = (props) => {\n    return (\n        <td>{props.children}</td>\n    )\n}\nexport default TD","import React from \"react\";\nimport TD from \"./TableData/TableData\";\nimport classes from \"./Row.module.css\";\nimport { Button } from \"@material-ui/core\";\n\nconst Row = ({ option, optionDisplay, addOption }) => {\n  const { inTheMoney } = option;\n  const properties = Object.keys(optionDisplay);\n\n  let TableData = null;\n  TableData = properties.map((val, key) => {\n    if (val === \"lastTradeDateTime\") {\n      return (\n        <TD key={key}>\n          {new Date(option.lastTradeDateTime.split(\" \")).toDateString()}\n        </TD>\n      );\n    } else if (typeof option[val] === \"number\") {\n      return <TD key={key}>{option[val].toFixed(2)}</TD>;\n    }\n    return <TD key={key}>{option[val]}</TD>;\n  });\n\n  return (\n    <tr className={inTheMoney === \"TRUE\" ? classes.Row : null}>\n      {TableData}\n      <TD>\n        <Button color=\"primary\" onClick={() => addOption(option)}>\n          Long\n        </Button>\n        <Button color=\"primary\">Short</Button>\n      </TD>\n    </tr>\n  );\n};\nexport default Row;\n","import React, { useState, useEffect } from \"react\";\nimport { getOptionData } from \"../../shared/functions\";\nimport Row from \"./Row/Row\";\nimport { optionValues } from \"../../shared/utility\";\n\nconst Option = ({\n  ticker,\n  expirationDate,\n  optionDisplay,\n  optionType,\n  addOption,\n}) => {\n  const [optionData, setOptionData] = useState([]);\n\n  useEffect(() => {\n    const data = getOptionData(ticker, expirationDate, optionType, true);\n    data.then((data) => setOptionData(data)).catch((err) => console.log(err)); // Handle it and Render User Feed back in a modal\n  }, [ticker, optionType, expirationDate]);\n\n  let rows = null;\n  if (optionData.length > 0) {\n    rows = optionData.map((contract) => {\n      return (\n        <Row\n          addOption={addOption}\n          key={contract.contractName}\n          optionDisplay={optionDisplay}\n          option={contract}\n        ></Row>\n      );\n    });\n  }\n\n  const keysToDisplay = Object.keys(optionDisplay);\n\n  let headitems = keysToDisplay.map((val, key) => {\n    return <th key={key}>{optionValues[val]}</th>;\n  });\n\n  return (\n    <div>\n      <h2>\n        {optionType + \"S\"} for {new Date(expirationDate).toDateString()}\n      </h2>\n      <table>\n        <thead>\n          <tr>{headitems}</tr>\n        </thead>\n        <tbody>{rows}</tbody>\n      </table>\n    </div>\n  );\n};\nexport default Option;\n","import React, { useEffect } from \"react\";\nimport Chart from \"chart.js\";\n\nconst Payoff = ({ title, ticker, data, labels }) => {\n  useEffect(() => {\n    const ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n    new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            lineTension: 0,\n            fill: false,\n            label: ticker,\n            data: data,\n            backgroundColor: [\"red\"],\n            borderColor: [\"red\"],\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: true,\n          text: title,\n        },\n        scales: {\n          //   yAxes: [\n          //     {\n          //       ticks: {\n          //         suggestedMin: -12,\n          //         suggestedMax: 15,\n          //       },\n          //     },\n          //   ],\n          // xAxes: [\n          //   {\n          //     ticks: {\n          //       suggestedMin: 0,\n          //       suggestedMax: 400,\n          //       stepSize: 1,\n          //     },\n          //   },\n          // ],\n        },\n      },\n    });\n  }, [data, labels, ticker, title]);\n  return (\n    <div\n      style={{\n        margin: \"auto\",\n        width: \"600px\",\n      }}\n    >\n      <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n    </div>\n  );\n};\n\nexport default Payoff;\n","export const getPayoffData = (options) => {\n  const maxStrike = getMaxStrike(options);\n  const length = Math.floor(maxStrike * 1.25);\n  const keys = Object.keys(options);\n  const data = new Array(length).fill(0);\n  const labels = [];\n  const cost = getTotalCost(options);\n\n  for (let i = 0; i < data.length; i++) {\n    labels.push(i);\n    fillPayoffArray(data, i, options, keys, cost);\n  }\n\n  console.log(data);\n\n  return { data, labels };\n};\n\nexport const evaluatePayoffFunc = (option, price) => {\n  if (option.type === \"CALL\") {\n    return Math.max(price - parseInt(option.strike), 0) * option.amount;\n  } else {\n    return Math.max(parseInt(option.strike) - price, 0) * option.amount;\n  }\n};\n\nexport const getMaxStrike = (options) => {\n  const keys = Object.keys(options);\n  let max = 0;\n  keys.forEach((key) => {\n    if (options[key].strike > max) {\n      max = options[key].strike;\n    }\n  });\n  return max;\n};\n\nconst fillPayoffArray = (matrix, index, options, keys, cost) => {\n  for (let i = 0; i < keys.length; i++) {\n    matrix[index] +=\n      Math.max(evaluatePayoffFunc(options[keys[i]], index), 0) - cost;\n  }\n};\n\nconst getTotalCost = (options) => {\n  const keys = Object.keys(options);\n  let cost = 0;\n  keys.forEach((key) => {\n    cost += options[key].ask;\n  });\n  return cost;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Button, Paper } from \"@material-ui/core\";\nimport Payoff from \"../Charts/Payoff/Payoff\";\nimport Delete from \"./Delete.svg\";\nimport { getMaxStrike, getPayoffData } from \"./utility\";\n\nconst Portfolio = ({ options, removeOption }) => {\n  const [Data, setData] = useState([]);\n  const [Labels, setLabels] = useState([]);\n  const [view, setView] = useState(false);\n\n  useEffect(() => {\n    console.log(\"Portfolio useEffect\");\n    const { data, labels } = getPayoffData(options);\n    setData(data);\n    setLabels(labels);\n  }, [options]);\n\n  const keys = Object.keys(options);\n  let list = keys.map((key) => {\n    const o = options[key];\n    return (\n      <ul key={o.contractName}>\n        <p>\n          {o.contractName} Strike: {o.strike} Cost: {o.ask} Amount: {o.amount}\n        </p>\n        <div onClick={() => removeOption(o.contractName)}>\n          <img src={Delete} alt=\"Remove\"></img>\n        </div>\n      </ul>\n    );\n  });\n\n  return (\n    <>\n      <Paper>\n        <div>\n          <h3>Analyze Option Portfolio:</h3>\n          {list}\n          {list.length > 0 && (\n            <>\n              <p>{getMaxStrike(options)}</p>\n              <Button color=\"primary\" onClick={() => setView(true)}>\n                View Chart\n              </Button>\n              <Button color=\"primary\" onClick={() => setView(false)}>\n                Hide Chart\n              </Button>\n            </>\n          )}\n        </div>\n        {view && <Payoff title={\"Some Title\"} data={Data} labels={Labels} />}\n      </Paper>\n    </>\n  );\n};\n\nexport default Portfolio;\n","import React, { useState } from \"react\";\nimport \"./Options.module.css\";\nimport TickerOptions from \"../../components/SecurityChartForm/Ticker/Ticker\";\nimport { updateObject, optionListView } from \"../../shared/utility\";\nimport { formatAPIRequestOptions } from \"../../shared/functions\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Option from \"../../components/Option/Option\";\nimport classes from \"./Options.module.css\";\nimport SecurityInfo from \"../../components/SecurityInfo/SecurityInfo\";\nimport Portfolio from \"../../components/Option/Portfolio/Portfolio\";\n\nconst Options = ({ history }) => {\n  const [ticker, setTicker] = useState({\n    elementType: \"select\",\n    elementConfig: {\n      options: [],\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    label: \"Ticker Symbol\",\n  });\n  const [dates, setDates] = useState({\n    elementType: \"select\",\n    elementConfig: {\n      options: [],\n    },\n    value: \"\",\n    validation: {\n      required: true,\n    },\n    label: \"Expiration Date\",\n    touched: false,\n  });\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [viewOptionChain, setViewOptionChain] = useState(false);\n  const [optionType, setOptionType] = useState(\"CALL\");\n  const [displayList, setDisplayList] = useState(true);\n  const [optionPortfolio, setOptionPortfolio] = useState({});\n\n  // Add Option to the portfolio\n  const addOption = (option) => {\n    const newPortfolio = { ...optionPortfolio };\n    if (option.contractName in newPortfolio) {\n      newPortfolio[option.contractName].amount += 1;\n    } else {\n      option.amount = 1;\n      newPortfolio[option.contractName] = option;\n    }\n    setOptionPortfolio(newPortfolio);\n  };\n\n  // Remove Option from the portfolio\n  const removeOption = (contract) => {\n    const newPortfolio = { ...optionPortfolio };\n    delete newPortfolio[contract];\n    setOptionPortfolio(newPortfolio);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setViewOptionChain(true);\n  };\n\n  const inputTickerChangedHandler = async (event) => {\n    const updatedFormElement = updateObject(ticker, {\n      ...ticker,\n      value: event.target.value,\n    });\n    history.push(\"/options/\" + event.target.value + \"/\");\n    setTicker(updatedFormElement);\n    const expDates = await formatAPIRequestOptions(event.target.value);\n\n    const date = {\n      ...dates,\n      elementConfig: {\n        options: expDates,\n      },\n    };\n    setDates(date);\n  };\n  const toggleListHandler = () => {\n    setDisplayList(!displayList);\n  };\n  const inputChangedHandler = (event) => {\n    const updatedFormElement = updateObject(dates, {\n      ...dates,\n      value: event.target.value,\n    });\n    let formIsValid = true;\n    for (let inputIdentifier in updatedFormElement) {\n      if (updatedFormElement[inputIdentifier].valid === false) {\n        formIsValid = false;\n      }\n    }\n    setDates(updatedFormElement);\n    setFormIsValid(formIsValid);\n  };\n\n  const toggleOptionTypeHandler = (type) => {\n    setOptionType(type);\n  };\n  const date = dates;\n  let expirationDates = null;\n  if (date.elementConfig.options.length > 0) {\n    expirationDates = (\n      <Input\n        key={1}\n        elementType={date.elementType}\n        elementConfig={date.elementConfig}\n        invalid={!true}\n        shouldValidate={date.validation.required}\n        value={date.value}\n        touched={date.touched}\n        label={date.label}\n        changed={(event) => inputChangedHandler(event, 1)}\n      />\n    );\n  }\n  let optionChain = null;\n  if (viewOptionChain) {\n    optionChain = (\n      <Option\n        addOption={addOption}\n        optionDisplay={optionListView}\n        ticker={ticker.value}\n        expirationDate={dates.value}\n        optionType={optionType}\n        displayList={displayList}\n      />\n    );\n  }\n  let tickerInfo = null;\n  if (ticker.value !== \"\") {\n    tickerInfo = <SecurityInfo ticker={ticker.value} />;\n  }\n  return (\n    <div className={classes.Container}>\n      {tickerInfo}\n      <Portfolio options={optionPortfolio} removeOption={removeOption} />\n      <form onSubmit={handleSubmit}>\n        <TickerOptions\n          ticker={ticker}\n          inputChangedHandler={inputTickerChangedHandler}\n        />\n        {expirationDates}\n        <Button btnType=\"Success\" disabled={!formIsValid}>\n          Submit\n        </Button>\n      </form>\n      <Button btnType=\"Info\" clicked={() => toggleOptionTypeHandler(\"CALL\")}>\n        Calls\n      </Button>\n      <Button btnType=\"Info\" clicked={() => toggleOptionTypeHandler(\"PUT\")}>\n        Puts\n      </Button>\n      <div style={{ display: \"inline-block\" }}>\n        <p>Display: </p> <p onClick={toggleListHandler}>List</p> <p>Straddle</p>\n      </div>\n\n      {optionChain}\n    </div>\n  );\n};\n\nexport default Options;\n","import axios from \"axios\";\nimport { API_KEY } from \"./key\";\nconst base = \"https://finnhub.io/api/v1/stock/candle?symbol=\";\n\nexport const formatAPIRequest = (symbol, timeframe, startDate, endDate) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    const result = [];\n    axios\n      .get(url)\n      .then((res) => {\n        const o = res.data.o;\n        const h = res.data.h;\n        const l = res.data.l;\n        const c = res.data.c;\n        const t = res.data.t;\n\n        for (let i = 0; i < o.length; i++) {\n          result.push({\n            x: new Date(t[i]) * 1000,\n            y: [o[i], h[i], l[i], c[i]],\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getTickerSymbols = (instrument) => {\n  let type = instrument;\n  let exchange = \"\";\n  switch (type) {\n    case \"stock\":\n      exchange = \"US\";\n      break;\n    case \"forex\":\n      exchange = \"oanda\";\n      break;\n    case \"crypto\":\n      exchange = \"binance\";\n      break;\n    default:\n      type = \"stock\";\n      exchange = \"US\";\n  }\n  return new Promise((resolve, reject) => {\n    const url =\n      \"https://finnhub.io/api/v1/\" +\n      type +\n      \"/symbol?exchange=\" +\n      exchange +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const convertFromDateToUNIXTimeStamp = (date) => {\n  const result = new Date(date).getTime() / 1000;\n  return result.toString();\n};\n\nexport const getTickerExpectedReturns = (\n  symbol,\n  timeframe,\n  startDate,\n  endDate\n) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        let sum = 0;\n        var divisor = 0;\n        const c = res.data.c;\n        console.log(c);\n        const returnsArray = [];\n        for (let i = 0; i < c.length; i++) {\n          if (i !== c.length - 1) {\n            sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n            returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n            divisor += 1;\n          }\n        }\n        const average = sum / divisor;\n        const stDev = standardDeviation(returnsArray);\n        console.log(returnsArray);\n        console.log(\"stDev\" + stDev);\n        console.log(\"ER\" + average);\n        resolve([average, stDev]);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getStockCorrelation = async (\n  ticker1,\n  ticker2,\n  startDate,\n  endDate,\n  timeframe\n) => {\n  const url =\n    base +\n    ticker1 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n\n  const url2 =\n    base +\n    ticker2 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n  let sum = 0;\n  await axios.get(url).then((res) => {   \n    const c = res.data.c;\n    const returnsArray = [];\n    \n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum = sum + ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n  sum = 0\n  await axios.get(url2).then((res) => {\n    const c = res.data.c;\n    const returnsArray = [];\n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n};\n\nconst standardDeviation = (arr, usePopulation = false) => {\n  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n  return Math.sqrt(\n    arr\n      .reduce((acc, val) => acc.concat((val - mean) ** 2), [])\n      .reduce((acc, val) => acc + val, 0) /\n      (arr.length - (usePopulation ? 0 : 1))\n  );\n};\n\nexport const formatAPIRequestOptions = (ticker) => {\n  const url =\n    \" https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n  console.log(url);\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const result = [];\n        const responseArray = res.data.data;\n        for (let i = 0; i < responseArray.length; i++) {\n          result.push({\n            key: i,\n            value: responseArray[i].expirationDate,\n            displayValue: responseArray[i].expirationDate,\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getOptionData = (\n  ticker,\n  expirationDate,\n  optionType,\n  optionListView\n) => {\n  const url =\n    \"https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = res.data.data;\n        let result = [];\n        for (let i = 0; i < data.length; i++) {\n          if (expirationDate.localeCompare(data[i].expirationDate) === 0) {\n            if (optionListView) {\n              result = data[i].options[optionType];\n            } else {\n              result = data[i].options.CALL;\n            }\n\n            break;\n          }\n        }\n        resolve(result);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getQuoteData = (symbol) => {\n  const url = \"https://finnhub.io/api/v1/quote?symbol=\" + symbol + API_KEY;\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = {\n          priceClose: res.data.pc,\n          date: new Date(res.data.t).toDateString(),\n        };\n        resolve(data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n"],"sourceRoot":""}