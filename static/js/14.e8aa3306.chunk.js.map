{"version":3,"sources":["hooks-store/store.js","components/SecurityChartForm/Ticker/Ticker.js","components/SecurityInfo/SecurityInfo.js","components/SecurityInfo/SecurityInfo.module.css","components/SecurityChartForm/SecurityChartForm.js","components/SecurityGrapher/SecurityGrapher.js","containers/InstrumentChart/InstrumentChart.js","shared/functions.js"],"names":["globalState","listeners","actions","useStore","shouldListen","setState","useState","dispatch","actionId","payload","newPortfolio","listener","useEffect","push","filter","li","initStore","userActions","initialState","withRouter","ticker","elementType","valid","validation","value","touched","label","path","match","inputChangedHandler","instrumentArray","setInstrumentArray","getTickerSymbols","slice","then","elementConfig","options","input","length","key","invalid","shouldValidate","changed","event","Fragment","connect","state","isAuth","undefined","auth","token","history","quoteData","setQuoteData","a","getQuoteData","data","func","addToWatchList","redirectLogin","axios","patch","symbol","createHTTPHeaders","className","classes","Container","Price","priceClose","Date","date","btnType","backgroundColor","clicked","module","exports","SecurityChartForm","inputForm","startDate","type","placeholder","required","minLength","endDate","timeFrame","displayValue","onSubmitHandler","preventDefault","formValues","formElementIdentifier","convertFromDateToUNIXTimeStamp","props","formSubmit","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","formIsValid","inputTickerChangedHandler","formElementsArray","this","id","config","form","onSubmit","map","formElement","disabled","Component","SecurityGrapher","loading","error","initialGraph","onSubmitFormHandler","bind","formatAPIRequest","catch","chart","height","title","text","align","xaxis","yaxis","tooltip","enabled","customChart","final","series","securityGrapher","SecurityInfo","instrument","React","InstrumentChart","base","timeframe","Promise","resolve","reject","url","API_KEY","result","get","res","o","h","l","c","t","i","x","y","console","log","exchange","tickers","description","getTime","toString","getTickerExpectedReturns","sum","divisor","returnsArray","average","stDev","standardDeviation","arr","usePopulation","mean","reduce","acc","val","Math","sqrt","concat","formatAPIRequestOptions","responseArray","expirationDate","getOptionData","optionType","optionListView","localeCompare","CALL","err","pc","toDateString"],"mappings":"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","file":"static/js/14.e8aa3306.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nlet globalState = {};\nlet listeners = [];\nlet actions = {};\n\nexport const useStore = (shouldListen = true) => {\n  const setState = useState(globalState)[1];\n\n  const dispatch = (actionId, payload) => {\n    const newPortfolio = actions[actionId](globalState, payload);\n    globalState = { ...globalState, ...newPortfolio };\n\n    for (const listener of listeners) {\n      listener(globalState);\n    }\n  };\n\n  useEffect(() => {\n    if (shouldListen) {\n      listeners.push(setState);\n    }\n\n    return () => {\n      if (shouldListen) {\n        listeners = listeners.filter((li) => li !== setState);\n      }\n    };\n  }, [setState, shouldListen]);\n\n  return [globalState, dispatch];\n};\n\nexport const initStore = (userActions, initialState) => {\n  if (initialState) {\n    globalState = { ...globalState, ...initialState };\n  }\n\n  actions = { ...actions, ...userActions };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { getTickerSymbols } from \"../../../shared/functions\";\nimport Input from '../../UI/Input/Input'\n\nconst TickerOptions = ({\n  ticker: {\n    elementType,\n    valid,\n    validation,\n    value,\n    touched,\n    label,\n  },\n  match : {\n    path,\n  },\n  inputChangedHandler\n}) => {\n\n  const [instrumentArray, setInstrumentArray] = useState([]);\n\n  useEffect((instrumentArray) => {\n    const tickersArray = getTickerSymbols(path.slice(1));\n    tickersArray.then((ticker) => setInstrumentArray(ticker));\n  }, [path]);\n\n\n  const elementConfig = {\n    options: instrumentArray\n  }\n  \n  let input = null\n  if(instrumentArray.length > 0){\n   input =  <Input\n    key=\"ticker\"\n    elementType={elementType}\n    elementConfig={elementConfig}\n    invalid={valid}\n    shouldValidate={validation}\n    value={value}\n    touched={touched}\n    label={label}\n    changed={(event) => inputChangedHandler(event, \"ticker\")}\n  />\n  }\n  return (\n    <React.Fragment>\n      {input}\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TickerOptions);\n","import React, { useState, useEffect } from \"react\";\nimport { getQuoteData } from \"../../shared/functions\";\nimport classes from \"./SecurityInfo.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { withRouter } from \"react-router\";\nimport axios from \"../../axios/auth\";\nimport { connect } from \"react-redux\";\nimport { createHTTPHeaders } from \"../../shared/utility\";\nimport { useStore } from \"../../hooks-store/store\";\n\nconst SecurityInfo = ({ ticker, history, isAuth, token }) => {\n  const [quoteData, setQuoteData] = useState({});\n  const dispatch = useStore(false)[1];\n  useEffect(() => {\n    const func = async () => {\n      const data = await getQuoteData(ticker);\n      setQuoteData(data);\n      dispatch(\"ADD_STOCK\", {\n        ticker,\n        data\n      });\n    };\n    func();\n  }, [ticker]);\n\n  const addToWatchList = async () => {\n    if (!isAuth) return redirectLogin();\n    await axios.patch(\n      \"watchlist\",\n      { symbol: ticker },\n      createHTTPHeaders(token)\n    );\n  };\n\n  const redirectLogin = () => {\n    history.push(\"/login\");\n  };\n  return (\n    <div className={classes.Container}>\n      <p>{ticker}</p>\n      <p className={classes.Price}>{quoteData.priceClose}</p>\n      <p className={classes.Date}>{quoteData.date}</p>\n      <Button btnType=\"Info\" className={{ backgroundColor: \"none\" }}>\n        Buy\n      </Button>\n      <Button btnType=\"Info\">Sell</Button>\n      <Button btnType=\"Info\" clicked={addToWatchList}>\n        Add to Favorites\n      </Button>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.token !== undefined,\n    token: state.auth.token,\n  };\n};\nexport default connect(mapStateToProps)(withRouter(SecurityInfo));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SecurityInfo_Container__1VStK\",\"Price\":\"SecurityInfo_Price__3t1fR\",\"Date\":\"SecurityInfo_Date__Oiu0K\"};","import React, { Component } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport { updateObject, checkValidity } from \"../../shared/utility\";\nimport { convertFromDateToUNIXTimeStamp } from \"../../shared/functions\";\nimport TickerOptions from \"./Ticker/Ticker\";\nimport Paper from \"@material-ui/core/Paper\";\n\nclass SecurityChartForm extends Component {\n  state = {\n    inputForm: {\n      startDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"Start Date\",\n        },\n        value: \"\",\n        label: \"Start Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      endDate: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"date\",\n          placeholder: \"End Date\",\n        },\n        value: \"\",\n        label: \"End Date\",\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n      timeFrame: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"1\", displayValue: \"1\" },\n            { value: \"5\", displayValue: \"5\" },\n            { value: \"15\", displayValue: \"15\" },\n            { value: \"30\", displayValue: \"30\" },\n            { value: \"60\", displayValue: \"60\" },\n            { value: \"D\", displayValue: \"D\" },\n            { value: \"W\", displayValue: \"W\" },\n            { value: \"M\", displayValue: \"M\" },\n          ],\n        },\n        value: \"30\",\n        validation: {\n          required: true,\n        },\n        label: \"Time Frame\",\n      },\n    },\n    ticker: {\n      elementType: \"select\",\n      elementConfig: {\n        options: [],\n      },\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      label: \"Ticker Symbol\",\n    },\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    const formValues = {};\n    for (let formElementIdentifier in this.state.inputForm) {\n      formValues[formElementIdentifier] = this.state.inputForm[\n        formElementIdentifier\n      ].value;\n    }\n    formValues.ticker = this.state.ticker.value;\n    formValues.startDate = convertFromDateToUNIXTimeStamp(formValues.startDate);\n    formValues.endDate = convertFromDateToUNIXTimeStamp(formValues.endDate);\n    this.props.formSubmit(formValues);\n  };\n  inputChangedHandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(\n      this.state.inputForm[inputIdentifier],\n      {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.inputForm[inputIdentifier].validation\n        ),\n        touched: true,\n      }\n    );\n    const updatedOrderForm = updateObject(this.state.inputForm, {\n      [inputIdentifier]: updatedFormElement,\n    });\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      if (updatedOrderForm[inputIdentifier].valid === false) {\n        formIsValid = false;\n      }\n    }\n\n    this.setState({ inputForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  inputTickerChangedHandler = (event) => {\n    const updatedFormElement = updateObject(this.state.ticker, {\n      ...this.state.ticker,\n      value: event.target.value,\n    });\n    this.setState({ ticker: updatedFormElement });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.inputForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.inputForm[key],\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.onSubmitHandler}>\n        <TickerOptions\n          ticker={this.state.ticker}\n          inputChangedHandler={this.inputTickerChangedHandler}\n        />\n\n        {formElementsArray.map((formElement, key) => {\n          return (\n            <Input\n              key={formElement.id}\n              elementType={formElement.config.elementType}\n              elementConfig={formElement.config.elementConfig}\n              invalid={!formElement.config.valid}\n              shouldValidate={formElement.config.validation}\n              value={formElement.config.value}\n              touched={formElement.config.touched}\n              label={formElement.config.label}\n              changed={(event) =>\n                this.inputChangedHandler(event, formElement.id)\n              }\n            />\n          );\n        })}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          SUBMIT\n        </Button>\n      </form>\n    );\n\n    return <Paper>{form}</Paper>;\n  }\n}\n\nexport default SecurityChartForm;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { formatAPIRequest } from \"../../shared/functions\";\nimport SecurityChartForm from \"../SecurityChartForm/SecurityChartForm\";\nimport SecurityInfo from \"../SecurityInfo/SecurityInfo\"\n\nexport default class SecurityGrapher extends React.Component {\n\n  componentDidMount() {\n    this.onSubmitFormHandler = this.onSubmitFormHandler.bind(this);\n    this.onSubmitFormHandler();\n  }\n\n  state = {\n    ticker: \"\",\n    loading: true,\n    error: null,\n    data: [],\n    initialGraph: {\n      ticker: \"\",\n      timeFrame: \"\",\n      startDate: \"\",\n      endDate: \"\",\n    },\n  };\n\n  onSubmitFormHandler(formValues = this.state.initialGraph) {\n    const data = formatAPIRequest(\n      formValues.ticker,\n      formValues.timeFrame,\n      formValues.startDate,\n      formValues.endDate\n    );\n    data\n      .then((data) =>\n        this.setState({ loading: false, data: data, ticker: formValues.ticker })\n      )\n      .catch((error) => this.setState({ error: error }));\n  }\n\n  render() {\n    const options = {\n      chart: {\n        type: \"candlestick\",\n        height: 350,\n      },\n      title: {\n        text: this.state.ticker,\n        align: \"left\",\n      },\n      xaxis: {\n        type: \"datetime\",\n      },\n      yaxis: {\n        tooltip: {\n          enabled: true,\n        },\n      },\n    };\n\n    let customChart = null;\n    if (!this.state.loading) {\n      const final = [\n        {\n          data: this.state.data,\n        },\n      ];\n      customChart = (\n        <Chart\n          options={options}\n          series={final}\n          type=\"candlestick\"\n          height={350}\n        />\n      );\n    }\n    let securityGrapher = null\n    if(this.state.ticker !==\"\"){\n      securityGrapher = <SecurityInfo ticker={this.state.ticker} />\n    }\n    return (\n      <div>\n        {securityGrapher}\n        {customChart}\n        <SecurityChartForm\n          instrument={this.props.instrument}\n          formSubmit={this.onSubmitFormHandler}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport SecurityGrapher from \"../../components/SecurityGrapher/SecurityGrapher\"\n\nconst InstrumentChart = props => {\n\n    return(\n        <SecurityGrapher instrument={props.match.path.slice(1)}/>\n    )\n        \n        \n    \n}\nexport default InstrumentChart","import axios from \"axios\";\nimport { API_KEY } from \"./key\";\nconst base = \"https://finnhub.io/api/v1/stock/candle?symbol=\";\n\nexport const formatAPIRequest = (symbol, timeframe, startDate, endDate) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    const result = [];\n    axios\n      .get(url)\n      .then((res) => {\n        const o = res.data.o;\n        const h = res.data.h;\n        const l = res.data.l;\n        const c = res.data.c;\n        const t = res.data.t;\n\n        for (let i = 0; i < o.length; i++) {\n          result.push({\n            x: new Date(t[i]) * 1000,\n            y: [o[i], h[i], l[i], c[i]],\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getTickerSymbols = (instrument) => {\n  let type = instrument;\n  let exchange = \"\";\n  switch (type) {\n    case \"stock\":\n      exchange = \"US\";\n      break;\n    case \"forex\":\n      exchange = \"oanda\";\n      break;\n    case \"crypto\":\n      exchange = \"binance\";\n      break;\n    default:\n      type = \"stock\";\n      exchange = \"US\";\n  }\n  return new Promise((resolve, reject) => {\n    const url =\n      \"https://finnhub.io/api/v1/\" +\n      type +\n      \"/symbol?exchange=\" +\n      exchange +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        const tickers = [];\n        const data = res.data;\n        for (let i = 0; i < data.length; i++) {\n          const t = data[i].symbol;\n          tickers.push({\n            key: i,\n            value: t,\n            displayValue: t + \" \" + data[i].description,\n          });\n        }\n        resolve(tickers);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const convertFromDateToUNIXTimeStamp = (date) => {\n  const result = new Date(date).getTime() / 1000;\n  return result.toString();\n};\n\nexport const getTickerExpectedReturns = (\n  symbol,\n  timeframe,\n  startDate,\n  endDate\n) => {\n  return new Promise((resolve, reject) => {\n    const url =\n      base +\n      symbol +\n      \"&resolution=\" +\n      timeframe +\n      \"&from=\" +\n      startDate +\n      \"&to=\" +\n      endDate +\n      API_KEY;\n    axios\n      .get(url)\n      .then((res) => {\n        let sum = 0;\n        var divisor = 0;\n        const c = res.data.c;\n        console.log(c);\n        const returnsArray = [];\n        for (let i = 0; i < c.length; i++) {\n          if (i !== c.length - 1) {\n            sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n            returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n            divisor += 1;\n          }\n        }\n        const average = sum / divisor;\n        const stDev = standardDeviation(returnsArray);\n        console.log(returnsArray);\n        console.log(\"stDev\" + stDev);\n        console.log(\"ER\" + average);\n        resolve([average, stDev]);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n};\n\nexport const getStockCorrelation = async (\n  ticker1,\n  ticker2,\n  startDate,\n  endDate,\n  timeframe\n) => {\n  const url =\n    base +\n    ticker1 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n\n  const url2 =\n    base +\n    ticker2 +\n    \"&resolution=\" +\n    timeframe +\n    \"&from=\" +\n    startDate +\n    \"&to=\" +\n    endDate +\n    API_KEY;\n  let sum = 0;\n  await axios.get(url).then((res) => {   \n    const c = res.data.c;\n    const returnsArray = [];\n    \n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum = sum + ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n  sum = 0\n  await axios.get(url2).then((res) => {\n    const c = res.data.c;\n    const returnsArray = [];\n    for (let i = 0; i < c.length; i++) {\n      if (i !== c.length - 1) {\n        sum += ((c[i + 1] - c[i]) / c[i]) * 100;\n        returnsArray.push(((c[i + 1] - c[i]) / c[i]) * 100);\n      }\n    }\n  });\n};\n\nconst standardDeviation = (arr, usePopulation = false) => {\n  const mean = arr.reduce((acc, val) => acc + val, 0) / arr.length;\n  return Math.sqrt(\n    arr\n      .reduce((acc, val) => acc.concat((val - mean) ** 2), [])\n      .reduce((acc, val) => acc + val, 0) /\n      (arr.length - (usePopulation ? 0 : 1))\n  );\n};\n\nexport const formatAPIRequestOptions = (ticker) => {\n  const url =\n    \" https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n  console.log(url);\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const result = [];\n        const responseArray = res.data.data;\n        for (let i = 0; i < responseArray.length; i++) {\n          result.push({\n            key: i,\n            value: responseArray[i].expirationDate,\n            displayValue: responseArray[i].expirationDate,\n          });\n        }\n        resolve(result);\n      })\n      .catch((error) => {\n        console.log(error);\n        reject(error);\n      });\n  });\n};\n\nexport const getOptionData = (\n  ticker,\n  expirationDate,\n  optionType,\n  optionListView\n) => {\n  const url =\n    \"https://finnhub.io/api/v1/stock/option-chain?symbol=\" + ticker + API_KEY;\n\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = res.data.data;\n        let result = [];\n        for (let i = 0; i < data.length; i++) {\n          if (expirationDate.localeCompare(data[i].expirationDate) === 0) {\n            if (optionListView) {\n              result = data[i].options[optionType];\n            } else {\n              result = data[i].options.CALL;\n            }\n\n            break;\n          }\n        }\n        resolve(result);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n\nexport const getQuoteData = (symbol) => {\n  const url = \"https://finnhub.io/api/v1/quote?symbol=\" + symbol + API_KEY;\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url)\n      .then((res) => {\n        const data = {\n          priceClose: res.data.pc,\n          date: new Date(res.data.t).toDateString(),\n        };\n        resolve(data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n};\n"],"sourceRoot":""}